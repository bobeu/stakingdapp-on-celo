{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000cfb38038062000cfb833981016040819052620000349162000118565b6040518060400160405280600b81526020016a2932bbb0b9322a37b5b2b760a91b8152506040518060400160405280600381526020016252544b60e81b8152508160039081620000859190620001f9565b506004620000948282620001f9565b50505060008111620000da5760405162461bcd60e51b815260206004820152600b60248201526a5a65726f20737570706c7960a81b604482015260640160405180910390fd5b620000ee81670de0b6b3a7640000620002c5565b60055550600680546001600160a01b0319166001600160a01b0392909216919091179055620002f1565b600080604083850312156200012c57600080fd5b82516001600160a01b03811681146200014457600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017f57607f821691505b602082108103620001a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f457600081815260208120601f850160051c81016020861015620001cf5750805b601f850160051c820191505b81811015620001f057828155600101620001db565b5050505b505050565b81516001600160401b0381111562000215576200021562000154565b6200022d816200022684546200016a565b84620001a6565b602080601f8311600181146200026557600084156200024c5750858301515b600019600386901b1c1916600185901b178555620001f0565b600085815260208120601f198616915b82811015620002965788860151825594840194600190910190840162000275565b5085821015620002b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417620002eb57634e487b7160e01b600052601160045260246000fd5b92915050565b6109fa80620003016000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e6578063a9059cbb146101f9578063d5abeb011461020c578063dd62ed3e1461021557600080fd5b806370a082311461018a5780638da5cb5b146101b357806395d89b41146101de57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610228565b6040516101049190610844565b60405180910390f35b61012061011b3660046108ae565b6102ba565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108d8565b6102d4565b60405160128152602001610104565b6101206101723660046108ae565b6102f8565b6101206101853660046108ae565b61031a565b610134610198366004610914565b6001600160a01b031660009081526020819052604090205490565b6006546101c6906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610380565b6101206101f43660046108ae565b61038f565b6101206102073660046108ae565b61040a565b61013460055481565b610134610223366004610936565b610418565b60606003805461023790610969565b80601f016020809104026020016040519081016040528092919081815260200182805461026390610969565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050905090565b6000336102c8818585610443565b60019150505b92915050565b6000336102e2858285610567565b6102ed8585856105e1565b506001949350505050565b6000336102c881858561030b8383610418565b61031591906109a3565b610443565b6006546000906001600160a01b0316331461036d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6103778383610785565b50600192915050565b60606004805461023790610969565b6000338161039d8286610418565b9050838110156103fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610364565b6102ed8286868403610443565b6000336102c88185856105e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610364565b6001600160a01b0382166105065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610364565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105738484610418565b905060001981146105db57818110156105ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610364565b6105db8484848403610443565b50505050565b6001600160a01b0383166106455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610364565b6001600160a01b0382166106a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610364565b6001600160a01b0383166000908152602081905260409020548181101561071f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610364565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105db565b6001600160a01b0382166107db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610364565b80600260008282546107ed91906109a3565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561087157858101830151858201604001528201610855565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108a957600080fd5b919050565b600080604083850312156108c157600080fd5b6108ca83610892565b946020939093013593505050565b6000806000606084860312156108ed57600080fd5b6108f684610892565b925061090460208501610892565b9150604084013590509250925092565b60006020828403121561092657600080fd5b61092f82610892565b9392505050565b6000806040838503121561094957600080fd5b61095283610892565b915061096060208401610892565b90509250929050565b600181811c9082168061097d57607f821691505b60208210810361099d57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fdfea264697066735822122029d2bfd06e0d3e61e37a9d024b1a5652803a245005688e17fe0cab1843d3137e64736f6c63430008110033",
    "sourceMap": "126:452:25:-:0;;;216:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2013:116:22;;;;;;;;;;;;;-1:-1:-1;;;2013:116:22;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:116:22;;;2088:5;2080;:13;;;;;;:::i;:::-;-1:-1:-1;2104:7:22;:17;2114:7;2104;:17;:::i;:::-;;2013:116;;318:1:25::1;305:10;:14;297:38;;;::::0;-1:-1:-1;;;297:38:25;;3293:2:27;297:38:25::1;::::0;::::1;3275:21:27::0;3332:2;3312:18;;;3305:30;-1:-1:-1;;;3351:18:27;;;3344:41;3402:18;;297:38:25::1;;;;;;;;354:21;:10:::0;368:6:::1;354:21;:::i;:::-;342:9;:33:::0;-1:-1:-1;382:5:25::1;:14:::0;;-1:-1:-1;;;;;;382:14:25::1;-1:-1:-1::0;;;;;382:14:25;;;::::1;::::0;;;::::1;::::0;;126:452;;14:351:27;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:27;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:27:o;370:127::-;431:10;426:3;422:20;419:1;412:31;462:4;459:1;452:15;486:4;483:1;476:15;502:380;581:1;577:12;;;;624;;;645:61;;699:4;691:6;687:17;677:27;;645:61;752:2;744:6;741:14;721:18;718:38;715:161;;798:10;793:3;789:20;786:1;779:31;833:4;830:1;823:15;861:4;858:1;851:15;715:161;;502:380;;;:::o;1013:545::-;1115:2;1110:3;1107:11;1104:448;;;1151:1;1176:5;1172:2;1165:17;1221:4;1217:2;1207:19;1291:2;1279:10;1275:19;1272:1;1268:27;1262:4;1258:38;1327:4;1315:10;1312:20;1309:47;;;-1:-1:-1;1350:4:27;1309:47;1405:2;1400:3;1396:12;1393:1;1389:20;1383:4;1379:31;1369:41;;1460:82;1478:2;1471:5;1468:13;1460:82;;;1523:17;;;1504:1;1493:13;1460:82;;;1464:3;;;1104:448;1013:545;;;:::o;1734:1352::-;1854:10;;-1:-1:-1;;;;;1876:30:27;;1873:56;;;1909:18;;:::i;:::-;1938:97;2028:6;1988:38;2020:4;2014:11;1988:38;:::i;:::-;1982:4;1938:97;:::i;:::-;2090:4;;2154:2;2143:14;;2171:1;2166:663;;;;2873:1;2890:6;2887:89;;;-1:-1:-1;2942:19:27;;;2936:26;2887:89;-1:-1:-1;;1691:1:27;1687:11;;;1683:24;1679:29;1669:40;1715:1;1711:11;;;1666:57;2989:81;;2136:944;;2166:663;960:1;953:14;;;997:4;984:18;;-1:-1:-1;;2202:20:27;;;2320:236;2334:7;2331:1;2328:14;2320:236;;;2423:19;;;2417:26;2402:42;;2515:27;;;;2483:1;2471:14;;;;2350:19;;2320:236;;;2324:3;2584:6;2575:7;2572:19;2569:201;;;2645:19;;;2639:26;-1:-1:-1;;2728:1:27;2724:14;;;2740:3;2720:24;2716:37;2712:42;2697:58;2682:74;;2569:201;-1:-1:-1;;;;;2816:1:27;2800:14;;;2796:22;2783:36;;-1:-1:-1;1734:1352:27:o;3431:265::-;3504:9;;;3535;;3552:15;;;3546:22;;3532:37;3522:168;;3612:10;3607:3;3603:20;3600:1;3593:31;3647:4;3644:1;3637:15;3675:4;3672:1;3665:15;3522:168;3431:265;;;;:::o;:::-;126:452:25;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e6578063a9059cbb146101f9578063d5abeb011461020c578063dd62ed3e1461021557600080fd5b806370a082311461018a5780638da5cb5b146101b357806395d89b41146101de57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610228565b6040516101049190610844565b60405180910390f35b61012061011b3660046108ae565b6102ba565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108d8565b6102d4565b60405160128152602001610104565b6101206101723660046108ae565b6102f8565b6101206101853660046108ae565b61031a565b610134610198366004610914565b6001600160a01b031660009081526020819052604090205490565b6006546101c6906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610380565b6101206101f43660046108ae565b61038f565b6101206102073660046108ae565b61040a565b61013460055481565b610134610223366004610936565b610418565b60606003805461023790610969565b80601f016020809104026020016040519081016040528092919081815260200182805461026390610969565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050905090565b6000336102c8818585610443565b60019150505b92915050565b6000336102e2858285610567565b6102ed8585856105e1565b506001949350505050565b6000336102c881858561030b8383610418565b61031591906109a3565b610443565b6006546000906001600160a01b0316331461036d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6103778383610785565b50600192915050565b60606004805461023790610969565b6000338161039d8286610418565b9050838110156103fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610364565b6102ed8286868403610443565b6000336102c88185856105e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610364565b6001600160a01b0382166105065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610364565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105738484610418565b905060001981146105db57818110156105ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610364565b6105db8484848403610443565b50505050565b6001600160a01b0383166106455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610364565b6001600160a01b0382166106a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610364565b6001600160a01b0383166000908152602081905260409020548181101561071f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610364565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105db565b6001600160a01b0382166107db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610364565b80600260008282546107ed91906109a3565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561087157858101830151858201604001528201610855565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108a957600080fd5b919050565b600080604083850312156108c157600080fd5b6108ca83610892565b946020939093013593505050565b6000806000606084860312156108ed57600080fd5b6108f684610892565b925061090460208501610892565b9150604084013590509250925092565b60006020828403121561092657600080fd5b61092f82610892565b9392505050565b6000806040838503121561094957600080fd5b61095283610892565b915061096060208401610892565b90509250929050565b600181811c9082168061097d57607f821691505b60208210810361099d57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fdfea264697066735822122029d2bfd06e0d3e61e37a9d024b1a5652803a245005688e17fe0cab1843d3137e64736f6c63430008110033",
    "sourceMap": "126:452:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:100:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4550:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:27;;1162:22;1144:41;;1132:2;1117:18;4550:201:22;1004:187:27;3319:108:22;3407:12;;3319:108;;;1342:25:27;;;1330:2;1315:18;3319:108:22;1196:177:27;5331:295:22;;;;;;:::i;:::-;;:::i;3161:93::-;;;3244:2;1853:36:27;;1841:2;1826:18;3161:93:22;1711:184:27;6035:238:22;;;;;;:::i;:::-;;:::i;408:163:25:-;;;;;;:::i;:::-;;:::i;3490:127:22:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3591:18:22;3564:7;3591:18;;;;;;;;;;;;3490:127;189:20:25;;;;;-1:-1:-1;;;;;189:20:25;;;;;;-1:-1:-1;;;;;2255:32:27;;;2237:51;;2225:2;2210:18;189:20:25;2091:203:27;2418:104:22;;;:::i;6776:436::-;;;;;;:::i;:::-;;:::i;3823:193::-;;;;;;:::i;:::-;;:::i;161:21:25:-;;;;;;4079:151:22;;;;;;:::i;:::-;;:::i;2199:100::-;2253:13;2286:5;2279:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:100;:::o;4550:201::-;4633:4;736:10:16;4689:32:22;736:10:16;4705:7:22;4714:6;4689:8;:32::i;:::-;4739:4;4732:11;;;4550:201;;;;;:::o;5331:295::-;5462:4;736:10:16;5520:38:22;5536:4;736:10:16;5551:6:22;5520:15;:38::i;:::-;5569:27;5579:4;5585:2;5589:6;5569:9;:27::i;:::-;-1:-1:-1;5614:4:22;;5331:295;-1:-1:-1;;;;5331:295:22:o;6035:238::-;6123:4;736:10:16;6179:64:22;736:10:16;6195:7:22;6232:10;6204:25;736:10:16;6195:7:22;6204:9;:25::i;:::-;:38;;;;:::i;:::-;6179:8;:64::i;408:163:25:-;499:5;;464:4;;-1:-1:-1;;;;;499:5:25;485:10;:19;477:46;;;;-1:-1:-1;;;477:46:25;;3378:2:27;477:46:25;;;3360:21:27;3417:2;3397:18;;;3390:30;-1:-1:-1;;;3436:18:27;;;3429:44;3490:18;;477:46:25;;;;;;;;;530:17;536:2;540:6;530:5;:17::i;:::-;-1:-1:-1;561:4:25;408:163;;;;:::o;2418:104:22:-;2474:13;2507:7;2500:14;;;;;:::i;6776:436::-;6869:4;736:10:16;6869:4:22;6952:25;736:10:16;6969:7:22;6952:9;:25::i;:::-;6925:52;;7016:15;6996:16;:35;;6988:85;;;;-1:-1:-1;;;6988:85:22;;3721:2:27;6988:85:22;;;3703:21:27;3760:2;3740:18;;;3733:30;3799:34;3779:18;;;3772:62;-1:-1:-1;;;3850:18:27;;;3843:35;3895:19;;6988:85:22;3519:401:27;6988:85:22;7109:60;7118:5;7125:7;7153:15;7134:16;:34;7109:8;:60::i;3823:193::-;3902:4;736:10:16;3958:28:22;736:10:16;3975:2:22;3979:6;3958:9;:28::i;4079:151::-;-1:-1:-1;;;;;4195:18:22;;;4168:7;4195:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4079:151::o;10803:380::-;-1:-1:-1;;;;;10939:19:22;;10931:68;;;;-1:-1:-1;;;10931:68:22;;4127:2:27;10931:68:22;;;4109:21:27;4166:2;4146:18;;;4139:30;4205:34;4185:18;;;4178:62;-1:-1:-1;;;4256:18:27;;;4249:34;4300:19;;10931:68:22;3925:400:27;10931:68:22;-1:-1:-1;;;;;11018:21:22;;11010:68;;;;-1:-1:-1;;;11010:68:22;;4532:2:27;11010:68:22;;;4514:21:27;4571:2;4551:18;;;4544:30;4610:34;4590:18;;;4583:62;-1:-1:-1;;;4661:18:27;;;4654:32;4703:19;;11010:68:22;4330:398:27;11010:68:22;-1:-1:-1;;;;;11091:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11143:32;;1342:25:27;;;11143:32:22;;1315:18:27;11143:32:22;;;;;;;10803:380;;;:::o;11474:453::-;11609:24;11636:25;11646:5;11653:7;11636:9;:25::i;:::-;11609:52;;-1:-1:-1;;11676:16:22;:37;11672:248;;11758:6;11738:16;:26;;11730:68;;;;-1:-1:-1;;;11730:68:22;;4935:2:27;11730:68:22;;;4917:21:27;4974:2;4954:18;;;4947:30;5013:31;4993:18;;;4986:59;5062:18;;11730:68:22;4733:353:27;11730:68:22;11842:51;11851:5;11858:7;11886:6;11867:16;:25;11842:8;:51::i;:::-;11598:329;11474:453;;;:::o;7682:840::-;-1:-1:-1;;;;;7813:18:22;;7805:68;;;;-1:-1:-1;;;7805:68:22;;5293:2:27;7805:68:22;;;5275:21:27;5332:2;5312:18;;;5305:30;5371:34;5351:18;;;5344:62;-1:-1:-1;;;5422:18:27;;;5415:35;5467:19;;7805:68:22;5091:401:27;7805:68:22;-1:-1:-1;;;;;7892:16:22;;7884:64;;;;-1:-1:-1;;;7884:64:22;;5699:2:27;7884:64:22;;;5681:21:27;5738:2;5718:18;;;5711:30;5777:34;5757:18;;;5750:62;-1:-1:-1;;;5828:18:27;;;5821:33;5871:19;;7884:64:22;5497:399:27;7884:64:22;-1:-1:-1;;;;;8034:15:22;;8012:19;8034:15;;;;;;;;;;;8068:21;;;;8060:72;;;;-1:-1:-1;;;8060:72:22;;6103:2:27;8060:72:22;;;6085:21:27;6142:2;6122:18;;;6115:30;6181:34;6161:18;;;6154:62;-1:-1:-1;;;6232:18:27;;;6225:36;6278:19;;8060:72:22;5901:402:27;8060:72:22;-1:-1:-1;;;;;8168:15:22;;;:9;:15;;;;;;;;;;;8186:20;;;8168:38;;8386:13;;;;;;;;;;:23;;;;;;8438:26;;1342:25:27;;;8386:13:22;;8438:26;;1315:18:27;8438:26:22;;;;;;;8477:37;12527:125;8809:548;-1:-1:-1;;;;;8893:21:22;;8885:65;;;;-1:-1:-1;;;8885:65:22;;6510:2:27;8885:65:22;;;6492:21:27;6549:2;6529:18;;;6522:30;6588:33;6568:18;;;6561:61;6639:18;;8885:65:22;6308:355:27;8885:65:22;9041:6;9025:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9196:18:22;;:9;:18;;;;;;;;;;;:28;;;;;;9251:37;1342:25:27;;;9251:37:22;;1315:18:27;9251:37:22;;;;;;;8809:548;;:::o;14::27:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:27;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:27:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:27:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:222::-;3014:9;;;3035:10;;;3032:133;;;3087:10;3082:3;3078:20;3075:1;3068:31;3122:4;3119:1;3112:15;3150:4;3147:1;3140:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "maxSupply()": "d5abeb01",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/reward/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"src/account/Account.sol\":{\"keccak256\":\"0x6b6b07b9dfc56b2a00c7f825e3bba0c2537319d0ff8f88156e00a6de08998d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f4623f3e5e9f098599c0b37ec71ed3b6128ec6ffed37aa4f2a9d4ea11e1b16b\",\"dweb:/ipfs/QmWgPFonTJWoAUJa148fXDtyNKrXZuwqLsZb5wwJPgbimt\"]},\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0xbc01b5d0052a8e9820bc6c2129f00fe16cb3f2b5118f1c7b5e1f21cfced5e56b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc81980a116381ecd907523de1d961ead94b4f1dd1a4abadab12861330f7de40\",\"dweb:/ipfs/QmVEpP9iG6af35BVCMndKwYjW4nXfZsx6nrrwRUcAM943z\"]},\"src/reward/ERC20.sol\":{\"keccak256\":\"0xd3a39537bad9d6e21b0cc2d74a34dc6bd256f3b96bd1e69a59199e2b2acbf30a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e62d006f385083fc1b171a738ef7a31c5d3e032b55b2c3169aa916244a96c383\",\"dweb:/ipfs/Qmf4eZbMuwpohYYTJ1qCTaA9ek8WJVszbvnXCi1qSfL6Ps\"]},\"src/reward/IERC20.sol\":{\"keccak256\":\"0x89c54307ad1370e646c7db27dd16d7b2136e260f1e6db0e2d7770b8a12f35e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67521276e735c784e9611676eb9c5441a69e969f1189fe4dcdba2d6f28824e95\",\"dweb:/ipfs/QmUVsp2gwCRB6Dd1KDJsXWbEjaJyDbshvrRvnKA2seMp9z\"]},\"src/reward/IERC20Metadata.sol\":{\"keccak256\":\"0x2cc02e1238a11d5cf5af946d8c928a6fdc5fd0ce018d3b52791a33f10cf93785\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e56e571b2c4cc26bc9f0c31fa87451d95051911e047260c7abb8d8d0c937af21\",\"dweb:/ipfs/QmVwjYeh4oZEmYqhrQBwapJ3ZBMaLsKFwjrsA3ntDyTJ21\"]},\"src/reward/RewardToken.sol\":{\"keccak256\":\"0x89f6c95e95d435c18c2872a06ac028dbbc26ee70d6f9e5176137e255fb72acf4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5738ba604b6b0e2c38c11c6e432f5cdf4ed3fdb8720627114bd06ce0d5b9220\",\"dweb:/ipfs/QmZnaBUHY7B22VyE27i2Nd99gdjndywgUDHB9ZMHmTAaYN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/reward/RewardToken.sol": "RewardToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "src/account/Account.sol": {
        "keccak256": "0x6b6b07b9dfc56b2a00c7f825e3bba0c2537319d0ff8f88156e00a6de08998d52",
        "urls": [
          "bzz-raw://1f4623f3e5e9f098599c0b37ec71ed3b6128ec6ffed37aa4f2a9d4ea11e1b16b",
          "dweb:/ipfs/QmWgPFonTJWoAUJa148fXDtyNKrXZuwqLsZb5wwJPgbimt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAccount.sol": {
        "keccak256": "0xbc01b5d0052a8e9820bc6c2129f00fe16cb3f2b5118f1c7b5e1f21cfced5e56b",
        "urls": [
          "bzz-raw://bc81980a116381ecd907523de1d961ead94b4f1dd1a4abadab12861330f7de40",
          "dweb:/ipfs/QmVEpP9iG6af35BVCMndKwYjW4nXfZsx6nrrwRUcAM943z"
        ],
        "license": "MIT"
      },
      "src/reward/ERC20.sol": {
        "keccak256": "0xd3a39537bad9d6e21b0cc2d74a34dc6bd256f3b96bd1e69a59199e2b2acbf30a",
        "urls": [
          "bzz-raw://e62d006f385083fc1b171a738ef7a31c5d3e032b55b2c3169aa916244a96c383",
          "dweb:/ipfs/Qmf4eZbMuwpohYYTJ1qCTaA9ek8WJVszbvnXCi1qSfL6Ps"
        ],
        "license": "MIT"
      },
      "src/reward/IERC20.sol": {
        "keccak256": "0x89c54307ad1370e646c7db27dd16d7b2136e260f1e6db0e2d7770b8a12f35e07",
        "urls": [
          "bzz-raw://67521276e735c784e9611676eb9c5441a69e969f1189fe4dcdba2d6f28824e95",
          "dweb:/ipfs/QmUVsp2gwCRB6Dd1KDJsXWbEjaJyDbshvrRvnKA2seMp9z"
        ],
        "license": "MIT"
      },
      "src/reward/IERC20Metadata.sol": {
        "keccak256": "0x2cc02e1238a11d5cf5af946d8c928a6fdc5fd0ce018d3b52791a33f10cf93785",
        "urls": [
          "bzz-raw://e56e571b2c4cc26bc9f0c31fa87451d95051911e047260c7abb8d8d0c937af21",
          "dweb:/ipfs/QmVwjYeh4oZEmYqhrQBwapJ3ZBMaLsKFwjrsA3ntDyTJ21"
        ],
        "license": "MIT"
      },
      "src/reward/RewardToken.sol": {
        "keccak256": "0x89f6c95e95d435c18c2872a06ac028dbbc26ee70d6f9e5176137e255fb72acf4",
        "urls": [
          "bzz-raw://d5738ba604b6b0e2c38c11c6e432f5cdf4ed3fdb8720627114bd06ce0d5b9220",
          "dweb:/ipfs/QmZnaBUHY7B22VyE27i2Nd99gdjndywgUDHB9ZMHmTAaYN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/reward/RewardToken.sol",
    "id": 28275,
    "exportedSymbols": {
      "Account": [
        27477
      ],
      "Context": [
        26601
      ],
      "ERC20": [
        28094
      ],
      "IAccount": [
        27490
      ],
      "IERC20": [
        28181
      ],
      "IERC20Metadata": [
        28206
      ],
      "RewardToken": [
        28274
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:538:25",
    "nodes": [
      {
        "id": 28208,
        "nodeType": "PragmaDirective",
        "src": "40:23:25",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 28209,
        "nodeType": "ImportDirective",
        "src": "67:32:25",
        "nodes": [],
        "absolutePath": "src/account/Account.sol",
        "file": "../account/Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28275,
        "sourceUnit": 27478,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28210,
        "nodeType": "ImportDirective",
        "src": "101:21:25",
        "nodes": [],
        "absolutePath": "src/reward/ERC20.sol",
        "file": "./ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28275,
        "sourceUnit": 28095,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28274,
        "nodeType": "ContractDefinition",
        "src": "126:452:25",
        "nodes": [
          {
            "id": 28214,
            "nodeType": "VariableDeclaration",
            "src": "161:21:25",
            "nodes": [],
            "constant": false,
            "functionSelector": "d5abeb01",
            "mutability": "mutable",
            "name": "maxSupply",
            "nameLocation": "173:9:25",
            "scope": 28274,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28213,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "161:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28216,
            "nodeType": "VariableDeclaration",
            "src": "189:20:25",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "204:5:25",
            "scope": 28274,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28248,
            "nodeType": "FunctionDefinition",
            "src": "216:186:25",
            "nodes": [],
            "body": {
              "id": 28247,
              "nodeType": "Block",
              "src": "290:112:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28228,
                          "name": "_maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28220,
                          "src": "305:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "318:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "305:14:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20737570706c79",
                        "id": 28231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "321:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ac53dd67df6e2047b50e57bbff333d6636c82e5a6f6ee88c7a82b54b9108cd8",
                          "typeString": "literal_string \"Zero supply\""
                        },
                        "value": "Zero supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ac53dd67df6e2047b50e57bbff333d6636c82e5a6f6ee88c7a82b54b9108cd8",
                          "typeString": "literal_string \"Zero supply\""
                        }
                      ],
                      "id": 28227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "297:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28233,
                  "nodeType": "ExpressionStatement",
                  "src": "297:38:25"
                },
                {
                  "expression": {
                    "id": 28241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28234,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28214,
                      "src": "342:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 28240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 28235,
                        "name": "_maxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28220,
                        "src": "354:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 28238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 28236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "368:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 28237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "372:2:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "368:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 28239,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "367:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "354:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:33:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28242,
                  "nodeType": "ExpressionStatement",
                  "src": "342:33:25"
                },
                {
                  "expression": {
                    "id": 28245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28243,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28216,
                      "src": "382:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28244,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28218,
                      "src": "390:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "382:14:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28246,
                  "nodeType": "ExpressionStatement",
                  "src": "382:14:25"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "526577617264546f6b656e",
                    "id": 28223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "268:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a776aa54923a68806e6d50a40a28332ccac2b7062a6ee74697d69bf81833639",
                      "typeString": "literal_string \"RewardToken\""
                    },
                    "value": "RewardToken"
                  },
                  {
                    "hexValue": "52544b",
                    "id": 28224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "283:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c98889344f00741ee7ee428dbb51d624197df6eb936d4a035c88680f6010a3dc",
                      "typeString": "literal_string \"RTK\""
                    },
                    "value": "RTK"
                  }
                ],
                "id": 28225,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28222,
                  "name": "ERC20",
                  "nameLocations": [
                    "262:5:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28094,
                  "src": "262:5:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "262:27:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28218,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "237:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28248,
                  "src": "229:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28220,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nameLocation": "250:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28248,
                  "src": "245:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28219,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "228:33:25"
            },
            "returnParameters": {
              "id": 28226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:25"
            },
            "scope": 28274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28273,
            "nodeType": "FunctionDefinition",
            "src": "408:163:25",
            "nodes": [],
            "body": {
              "id": 28272,
              "nodeType": "Block",
              "src": "470:101:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "485:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "489:6:25",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "485:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 28260,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28216,
                          "src": "499:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "485:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420417574686f72697a6564",
                        "id": 28262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "506:16:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2",
                          "typeString": "literal_string \"Not Authorized\""
                        },
                        "value": "Not Authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2",
                          "typeString": "literal_string \"Not Authorized\""
                        }
                      ],
                      "id": 28257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "477:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28264,
                  "nodeType": "ExpressionStatement",
                  "src": "477:46:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28266,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28250,
                        "src": "536:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28267,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28252,
                        "src": "540:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28265,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27911,
                      "src": "530:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:17:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28269,
                  "nodeType": "ExpressionStatement",
                  "src": "530:17:25"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 28270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "561:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 28256,
                  "id": 28271,
                  "nodeType": "Return",
                  "src": "554:11:25"
                }
              ]
            },
            "baseFunctions": [
              28180
            ],
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "417:4:25",
            "parameters": {
              "id": 28253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28250,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "430:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28273,
                  "src": "422:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28252,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "439:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 28273,
                  "src": "434:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28251,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:25:25"
            },
            "returnParameters": {
              "id": 28256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28273,
                  "src": "464:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28254,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:6:25"
            },
            "scope": 28274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28211,
              "name": "ERC20",
              "nameLocations": [
                "150:5:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28094,
              "src": "150:5:25"
            },
            "id": 28212,
            "nodeType": "InheritanceSpecifier",
            "src": "150:5:25"
          }
        ],
        "canonicalName": "RewardToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28274,
          28094,
          28206,
          28181,
          26601
        ],
        "name": "RewardToken",
        "nameLocation": "135:11:25",
        "scope": 28275,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 25
}