{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract RewardToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract Vault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905568056bc75e2d6310000060155534801561002a57600080fd5b50612ee68061003a6000396000f3fe608060405260043610620000895760003560e01c8063cc8af67e1162000054578063cc8af67e146200010d578063fa7626d41462000125578063fbfa77cf1462000141578063fc0c546a146200017c57600080fd5b80630a9254e414620000965780633a1143da14620000b0578063afe571a514620000c8578063ba414fa614620000e057600080fd5b366200009157005b600080fd5b348015620000a357600080fd5b50620000ae6200019e565b005b348015620000bd57600080fd5b50620000ae620002c8565b348015620000d557600080fd5b50620000ae620004be565b348015620000ed57600080fd5b50620000f8620007d2565b60405190151581526020015b60405180910390f35b3480156200011a57600080fd5b50620000ae62000907565b3480156200013257600080fd5b50600054620000f89060ff1681565b3480156200014e57600080fd5b5060135462000163906001600160a01b031681565b6040516001600160a01b03909116815260200162000104565b3480156200018957600080fd5b5060145462000163906001600160a01b031681565b604051678ac7230489e80000906b033b2e3c9fd0803ce8000000908290620001c69062000f56565b908152602001604051809103906000f080158015620001e9573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b039290921691821790556040518290620002199062000f64565b6001600160a01b0390921682526020820152604001604051809103906000f0801580156200024b573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b0392831690811790915560135460405163144fa6d760e01b815260048101929092529091169063144fa6d790602401600060405180830381600087803b158015620002ab57600080fd5b505af1158015620002c0573d6000803e3d6000fd5b505050505050565b60135460155460408051633a4b66f160e01b8152905142936000936001600160a01b0390911692633a4b66f1926004808301926020929190829003018185885af11580156200031b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000342919062000f72565b90506200035181600162000bd5565b60135460408051630f56407160e01b815290516000926001600160a01b031691630f5640719160048083019260609291908290030181865afa1580156200039c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c2919062000f9d565b9050620003d481600001518462000d5e565b620003e6816020015160155462000d5e565b60408101516001600160a01b0316620004355760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064015b60405180910390fd5b60145460408281015190516370a0823160e01b81526001600160a01b039182166004820152620004b99291909116906370a0823190602401602060405180830381865afa1580156200048b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b191906200101a565b600062000d5e565b505050565b60135460155460408051633a4b66f160e01b8152905147936001600160a01b031692633a4b66f19290916004808301926020929190829003018185885af11580156200050e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000535919062000f72565b620005745760405162461bcd60e51b815260206004820152600e60248201526d14dd185ada5b99c819985a5b195960921b60448201526064016200042c565b6200058f476015548362000589919062001034565b62000d5e565b601360009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620005e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060b919062000f72565b620006425760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016200042c565b60135460408051630f56407160e01b815290516000926001600160a01b031691630f5640719160048083019260609291908290030181865afa1580156200068d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006b3919062000f9d565b60408101519091506001600160a01b0316620006fd5760405162461bcd60e51b81526020600482015260086024820152675a65726f20616c6360c01b60448201526064016200042c565b60145460408281015190516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156200074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200077291906200101a565b66038d7ea4c6800014620007bd5760405162461bcd60e51b815260206004820152601160248201527016995c9bc81d1bdad95b881c995dd85c99607a1b60448201526064016200042c565b620007ce8160200151600062000d5e565b5050565b60008054610100900460ff1615620007f35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000884917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001082565b60408051601f1981840301815290829052620008a091620010b5565b6000604051808303816000865af19150503d8060008114620008df576040519150601f19603f3d011682016040523d82523d6000602084013e620008e4565b606091505b5091505080806020019051810190620008fe919062000f72565b9150505b919050565b60135460155460408051633a4b66f160e01b8152905147936001600160a01b031692633a4b66f19290916004808301926020929190829003018185885af115801562000957573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200097e919062000f72565b620009bd5760405162461bcd60e51b815260206004820152600e60248201526d14dd185ada5b99c819985a5b195960921b60448201526064016200042c565b804710620009f65760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064016200042c565b601360009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b81526004016020604051808303816000875af115801562000a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a72919062000f72565b62000aa95760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016200042c565b601360009054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000afa57600080fd5b505af115801562000b0f573d6000803e3d6000fd5b5050505062000b1f478262000d5e565b6014546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000b69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b8f91906200101a565b1162000bd25760405162461bcd60e51b815260206004820152601160248201527016995c9bc81d1bdad95b881c995dd85c99607a1b60448201526064016200042c565b50565b80151582151514620007ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000c4c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162000c9f576040518060400160405280600581526020016466616c736560d81b81525062000cbd565b604051806040016040528060048152602001637472756560e01b8152505b60405162000ccc919062001101565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262000d1f576040518060400160405280600581526020016466616c736560d81b81525062000d3d565b604051806040016040528060048152602001637472756560e01b8152505b60405162000d4c919062001148565b60405180910390a1620007ce62000e43565b808214620007ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000dd19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000e0a919062001173565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000d4c9190620011ac565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f455760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ee0929160200162001082565b60408051601f198184030181529082905262000efc91620010b5565b6000604051808303816000865af19150503d806000811462000f3b576040519150601f19603f3d011682016040523d82523d6000602084013e62000f40565b606091505b505050505b6000805461ff001916610100179055565b610fde80620011d883390190565b610cfb80620021b683390190565b60006020828403121562000f8557600080fd5b8151801515811462000f9657600080fd5b9392505050565b60006060828403121562000fb057600080fd5b6040516060810181811067ffffffffffffffff8211171562000fe257634e487b7160e01b600052604160045260246000fd5b604090815283518252602080850151908301528301516001600160a01b03811681146200100e57600080fd5b60408201529392505050565b6000602082840312156200102d57600080fd5b5051919050565b818103818111156200105657634e487b7160e01b600052601160045260246000fd5b92915050565b60005b83811015620010795781810151838201526020016200105f565b50506000910152565b6001600160e01b0319831681528151600090620010a78160048501602087016200105c565b919091016004019392505050565b60008251620010c98184602087016200105c565b9190910192915050565b60008151808452620010ed8160208601602086016200105c565b601f01601f19169290920160200192915050565b6040815260006200112c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620011408185620010d3565b949350505050565b6040815260006200112c60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200119e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200119e60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b50604051610fde380380610fde83398101604081905261002f916100e4565b61003833610094565b6000811161008c5760405162461bcd60e51b815260206004820152601760248201527f4d696e696d756d207374616b696e6720746f6f206c6f77000000000000000000604482015260640160405180910390fd5b6001556100fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f657600080fd5b5051919050565b610ed28061010c6000396000f3fe6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146101825780638da5cb5b14610197578063d479ed71146101c9578063f2fde38b146101ed578063fc0c546a1461020d578063fed1252a1461022d57600080fd5b80630f564071146100db578063144fa6d7146101205780632def6620146101405780633a4b66f1146101655780633ccfd60b1461016d57600080fd5b366100d657600034116100d45760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b005b600080fd5b3480156100e757600080fd5b506100f0610243565b604080518251815260208084015190820152918101516001600160a01b0316908201526060015b60405180910390f35b34801561012c57600080fd5b506100d461013b3660046109c8565b61027e565b34801561014c57600080fd5b506101556102a8565b6040519015158152602001610117565b610155610388565b34801561017957600080fd5b506100d46104ee565b34801561018e57600080fd5b506100d46105b5565b3480156101a357600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610117565b3480156101d557600080fd5b506101df60015481565b604051908152602001610117565b3480156101f957600080fd5b506100d46102083660046109c8565b6105c9565b34801561021957600080fd5b506003546101b1906001600160a01b031681565b34801561023957600080fd5b506101df60025481565b6102706040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b61027933610642565b905090565b6102866106b3565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260046020908152604080832081516060810183528154815260018201549381018490526002909101546001600160a01b03169181019190915290820361030f57806020015160405163076ca5e760e21b81526004016100cb91815260200190565b60408101516001600160a01b03166103695760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420616e6f6d616c6c792064657465637465640000000000000060448201526064016100cb565b61038081604001518260200151836000015161070d565b600191505090565b600080600061039633610642565b90506001543410156103bd576040516302ee6a2560e21b81523460048201526024016100cb565b604081015191506001600160a01b03821661041d576003546040516001600160a01b03909116906103ed906109a6565b6001600160a01b039091168152602001604051809103906000f080158015610419573d6000803e3d6000fd5b5091505b60208101511561043a5761043a828260200151836000015161070d565b604051806060016040528061044c4290565b8152346020808301919091526001600160a01b0385811660409384015233600090815260048352838120855181559285015160018401559390920151600291820180546001600160a01b03191691909316179091558054916104ad836109fb565b90915550506040513481527feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca279060200160405180910390a160019250505090565b60006104f933610642565b6040908101519051633ce051f560e11b81523360048201529091506001600160a01b038216906379c0a3ea90602401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b5050604051627a79d960e91b81523360048201526001600160a01b038416925063f4f3b2009150602401600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b5050505050565b6105bd6106b3565b6105c76000610820565b565b6105d16106b3565b6001600160a01b0381166106365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100cb565b61063f81610820565b50565b61066f6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b506001600160a01b03908116600090815260046020908152604091829020825160608101845281548152600182015492810192909252600201549092169082015290565b6000546001600160a01b031633146105c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100cb565b6002805490600061071d83610a14565b909155505033600090815260046020526040808220600101829055516001600160a01b0385169084908381818185875af1925050503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b50509050806107c85760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c881c995a9958dd1959607a1b60448201526064016100cb565b60006107d48484610870565b905080156107e6576107e685826108da565b6040518481527f11725367022c3ff288940f4b5473aa61c2da6a24af7363a1128ee2401e8983b29060200160405180910390a15050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000603c4283810361088d5766038d7ea4c68000925050506108d4565b838111156108d15760006108a1828661097b565b905080156108c4576108bd836108b7838961098e565b9061099a565b93506108cf565b66038d7ea4c6800093505b505b50505b92915050565b6003546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f19906044016020604051808303816000875af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610a2b565b6109775760405162461bcd60e51b815260206004820152600060248201526044016100cb565b5050565b60006109878284610a4d565b9392505050565b60006109878284610a60565b60006109878284610a77565b61040380610a9a83390190565b6001600160a01b038116811461063f57600080fd5b6000602082840312156109da57600080fd5b8135610987816109b3565b634e487b7160e01b600052601160045260246000fd5b600060018201610a0d57610a0d6109e5565b5060010190565b600081610a2357610a236109e5565b506000190190565b600060208284031215610a3d57600080fd5b8151801515811461098757600080fd5b818103818111156108d4576108d46109e5565b80820281158282048414176108d4576108d46109e5565b600082610a9457634e487b7160e01b600052601260045260246000fd5b50049056fe608060405260405161040338038061040383398101604081905261002291610055565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610085565b60006020828403121561006757600080fd5b81516001600160a01b038116811461007e57600080fd5b9392505050565b61036f806100946000396000f3fe60806040526004361061002d5760003560e01c806379c0a3ea1461006c578063f4f3b2001461008e57600080fd5b36610067576040513481527ffd51b9a62feedc9cf075eaada5ee2e87aaaa00219195f21375592867215b3c5e9060200160405180910390a1005b600080fd5b34801561007857600080fd5b5061008c6100873660046102ce565b6100ae565b005b34801561009a57600080fd5b5061008c6100a93660046102ce565b61017c565b6000546001600160a01b031633146100e057604051630b104a5b60e01b81523360048201526024015b60405180910390fd5b60405147906000906001600160a01b0384169083908381818185875af1925050503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b50509050806101775760405162461bcd60e51b81526020600482015260116024820152701dda5d1a191c985dd85b0819985a5b1959607a1b60448201526064016100d7565b505050565b6000546001600160a01b031633146101a957604051630b104a5b60e01b81523360048201526024016100d7565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906102fe565b905080156102ca5760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102959190610317565b6102ca5760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016100d7565b5050565b6000602082840312156102e057600080fd5b81356001600160a01b03811681146102f757600080fd5b9392505050565b60006020828403121561031057600080fd5b5051919050565b60006020828403121561032957600080fd5b815180151581146102f757600080fdfea264697066735822122025bbb4b8a17f3e3e4b12e12b816475640439ac1b5117dddcb15d55509b72d8d664736f6c63430008110033a2646970667358221220b12204cb8d745d52056bf7de98ac6b5e31c146c07f6851915b2333a9f81edf2964736f6c6343000811003360806040523480156200001157600080fd5b5060405162000cfb38038062000cfb833981016040819052620000349162000118565b6040518060400160405280600b81526020016a2932bbb0b9322a37b5b2b760a91b8152506040518060400160405280600381526020016252544b60e81b8152508160039081620000859190620001f9565b506004620000948282620001f9565b50505060008111620000da5760405162461bcd60e51b815260206004820152600b60248201526a5a65726f20737570706c7960a81b604482015260640160405180910390fd5b620000ee81670de0b6b3a7640000620002c5565b60055550600680546001600160a01b0319166001600160a01b0392909216919091179055620002f1565b600080604083850312156200012c57600080fd5b82516001600160a01b03811681146200014457600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017f57607f821691505b602082108103620001a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f457600081815260208120601f850160051c81016020861015620001cf5750805b601f850160051c820191505b81811015620001f057828155600101620001db565b5050505b505050565b81516001600160401b0381111562000215576200021562000154565b6200022d816200022684546200016a565b84620001a6565b602080601f8311600181146200026557600084156200024c5750858301515b600019600386901b1c1916600185901b178555620001f0565b600085815260208120601f198616915b82811015620002965788860151825594840194600190910190840162000275565b5085821015620002b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417620002eb57634e487b7160e01b600052601160045260246000fd5b92915050565b6109fa80620003016000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e6578063a9059cbb146101f9578063d5abeb011461020c578063dd62ed3e1461021557600080fd5b806370a082311461018a5780638da5cb5b146101b357806395d89b41146101de57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610228565b6040516101049190610844565b60405180910390f35b61012061011b3660046108ae565b6102ba565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108d8565b6102d4565b60405160128152602001610104565b6101206101723660046108ae565b6102f8565b6101206101853660046108ae565b61031a565b610134610198366004610914565b6001600160a01b031660009081526020819052604090205490565b6006546101c6906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610380565b6101206101f43660046108ae565b61038f565b6101206102073660046108ae565b61040a565b61013460055481565b610134610223366004610936565b610418565b60606003805461023790610969565b80601f016020809104026020016040519081016040528092919081815260200182805461026390610969565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050905090565b6000336102c8818585610443565b60019150505b92915050565b6000336102e2858285610567565b6102ed8585856105e1565b506001949350505050565b6000336102c881858561030b8383610418565b61031591906109a3565b610443565b6006546000906001600160a01b0316331461036d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6103778383610785565b50600192915050565b60606004805461023790610969565b6000338161039d8286610418565b9050838110156103fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610364565b6102ed8286868403610443565b6000336102c88185856105e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610364565b6001600160a01b0382166105065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610364565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105738484610418565b905060001981146105db57818110156105ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610364565b6105db8484848403610443565b50505050565b6001600160a01b0383166106455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610364565b6001600160a01b0382166106a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610364565b6001600160a01b0383166000908152602081905260409020548181101561071f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610364565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105db565b6001600160a01b0382166107db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610364565b80600260008282546107ed91906109a3565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561087157858101830151858201604001528201610855565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108a957600080fd5b919050565b600080604083850312156108c157600080fd5b6108ca83610892565b946020939093013593505050565b6000806000606084860312156108ed57600080fd5b6108f684610892565b925061090460208501610892565b9150604084013590509250925092565b60006020828403121561092657600080fd5b61092f82610892565b9392505050565b6000806040838503121561094957600080fd5b61095283610892565b915061096060208401610892565b90509250929050565b600181811c9082168061097d57607f821691505b60208210810361099d57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fdfea264697066735822122029d2bfd06e0d3e61e37a9d024b1a5652803a245005688e17fe0cab1843d3137e64736f6c63430008110033a264697066735822122010380891f497bc355edac9d79e2a5a034eb59e502eb2acae78b500dbec40868164736f6c63430008110033",
    "sourceMap": "244:1736:26:-:0;;;1609:26:0;;;-1:-1:-1;;1609:26:0;1631:4;1609:26;;;344:8:26;328:24;;244:1736;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620000895760003560e01c8063cc8af67e1162000054578063cc8af67e146200010d578063fa7626d41462000125578063fbfa77cf1462000141578063fc0c546a146200017c57600080fd5b80630a9254e414620000965780633a1143da14620000b0578063afe571a514620000c8578063ba414fa614620000e057600080fd5b366200009157005b600080fd5b348015620000a357600080fd5b50620000ae6200019e565b005b348015620000bd57600080fd5b50620000ae620002c8565b348015620000d557600080fd5b50620000ae620004be565b348015620000ed57600080fd5b50620000f8620007d2565b60405190151581526020015b60405180910390f35b3480156200011a57600080fd5b50620000ae62000907565b3480156200013257600080fd5b50600054620000f89060ff1681565b3480156200014e57600080fd5b5060135462000163906001600160a01b031681565b6040516001600160a01b03909116815260200162000104565b3480156200018957600080fd5b5060145462000163906001600160a01b031681565b604051678ac7230489e80000906b033b2e3c9fd0803ce8000000908290620001c69062000f56565b908152602001604051809103906000f080158015620001e9573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b039290921691821790556040518290620002199062000f64565b6001600160a01b0390921682526020820152604001604051809103906000f0801580156200024b573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b0392831690811790915560135460405163144fa6d760e01b815260048101929092529091169063144fa6d790602401600060405180830381600087803b158015620002ab57600080fd5b505af1158015620002c0573d6000803e3d6000fd5b505050505050565b60135460155460408051633a4b66f160e01b8152905142936000936001600160a01b0390911692633a4b66f1926004808301926020929190829003018185885af11580156200031b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000342919062000f72565b90506200035181600162000bd5565b60135460408051630f56407160e01b815290516000926001600160a01b031691630f5640719160048083019260609291908290030181865afa1580156200039c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c2919062000f9d565b9050620003d481600001518462000d5e565b620003e6816020015160155462000d5e565b60408101516001600160a01b0316620004355760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b60448201526064015b60405180910390fd5b60145460408281015190516370a0823160e01b81526001600160a01b039182166004820152620004b99291909116906370a0823190602401602060405180830381865afa1580156200048b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b191906200101a565b600062000d5e565b505050565b60135460155460408051633a4b66f160e01b8152905147936001600160a01b031692633a4b66f19290916004808301926020929190829003018185885af11580156200050e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000535919062000f72565b620005745760405162461bcd60e51b815260206004820152600e60248201526d14dd185ada5b99c819985a5b195960921b60448201526064016200042c565b6200058f476015548362000589919062001034565b62000d5e565b601360009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620005e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060b919062000f72565b620006425760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016200042c565b60135460408051630f56407160e01b815290516000926001600160a01b031691630f5640719160048083019260609291908290030181865afa1580156200068d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006b3919062000f9d565b60408101519091506001600160a01b0316620006fd5760405162461bcd60e51b81526020600482015260086024820152675a65726f20616c6360c01b60448201526064016200042c565b60145460408281015190516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156200074c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200077291906200101a565b66038d7ea4c6800014620007bd5760405162461bcd60e51b815260206004820152601160248201527016995c9bc81d1bdad95b881c995dd85c99607a1b60448201526064016200042c565b620007ce8160200151600062000d5e565b5050565b60008054610100900460ff1615620007f35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000884917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001082565b60408051601f1981840301815290829052620008a091620010b5565b6000604051808303816000865af19150503d8060008114620008df576040519150601f19603f3d011682016040523d82523d6000602084013e620008e4565b606091505b5091505080806020019051810190620008fe919062000f72565b9150505b919050565b60135460155460408051633a4b66f160e01b8152905147936001600160a01b031692633a4b66f19290916004808301926020929190829003018185885af115801562000957573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200097e919062000f72565b620009bd5760405162461bcd60e51b815260206004820152600e60248201526d14dd185ada5b99c819985a5b195960921b60448201526064016200042c565b804710620009f65760405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b60448201526064016200042c565b601360009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b81526004016020604051808303816000875af115801562000a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a72919062000f72565b62000aa95760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016200042c565b601360009054906101000a90046001600160a01b03166001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000afa57600080fd5b505af115801562000b0f573d6000803e3d6000fd5b5050505062000b1f478262000d5e565b6014546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000b69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b8f91906200101a565b1162000bd25760405162461bcd60e51b815260206004820152601160248201527016995c9bc81d1bdad95b881c995dd85c99607a1b60448201526064016200042c565b50565b80151582151514620007ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000c4c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162000c9f576040518060400160405280600581526020016466616c736560d81b81525062000cbd565b604051806040016040528060048152602001637472756560e01b8152505b60405162000ccc919062001101565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262000d1f576040518060400160405280600581526020016466616c736560d81b81525062000d3d565b604051806040016040528060048152602001637472756560e01b8152505b60405162000d4c919062001148565b60405180910390a1620007ce62000e43565b808214620007ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000dd19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000e0a919062001173565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000d4c9190620011ac565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f455760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000ee0929160200162001082565b60408051601f198184030181529082905262000efc91620010b5565b6000604051808303816000865af19150503d806000811462000f3b576040519150601f19603f3d011682016040523d82523d6000602084013e62000f40565b606091505b505050505b6000805461ff001916610100179055565b610fde80620011d883390190565b610cfb80620021b683390190565b60006020828403121562000f8557600080fd5b8151801515811462000f9657600080fd5b9392505050565b60006060828403121562000fb057600080fd5b6040516060810181811067ffffffffffffffff8211171562000fe257634e487b7160e01b600052604160045260246000fd5b604090815283518252602080850151908301528301516001600160a01b03811681146200100e57600080fd5b60408201529392505050565b6000602082840312156200102d57600080fd5b5051919050565b818103818111156200105657634e487b7160e01b600052601160045260246000fd5b92915050565b60005b83811015620010795781810151838201526020016200105f565b50506000910152565b6001600160e01b0319831681528151600090620010a78160048501602087016200105c565b919091016004019392505050565b60008251620010c98184602087016200105c565b9190910192915050565b60008151808452620010ed8160208601602086016200105c565b601f01601f19169290920160200192915050565b6040815260006200112c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152620011408185620010d3565b949350505050565b6040815260006200112c60408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200119e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200119e60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe608060405234801561001057600080fd5b50604051610fde380380610fde83398101604081905261002f916100e4565b61003833610094565b6000811161008c5760405162461bcd60e51b815260206004820152601760248201527f4d696e696d756d207374616b696e6720746f6f206c6f77000000000000000000604482015260640160405180910390fd5b6001556100fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f657600080fd5b5051919050565b610ed28061010c6000396000f3fe6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146101825780638da5cb5b14610197578063d479ed71146101c9578063f2fde38b146101ed578063fc0c546a1461020d578063fed1252a1461022d57600080fd5b80630f564071146100db578063144fa6d7146101205780632def6620146101405780633a4b66f1146101655780633ccfd60b1461016d57600080fd5b366100d657600034116100d45760405162461bcd60e51b815260206004820152600060248201526044015b60405180910390fd5b005b600080fd5b3480156100e757600080fd5b506100f0610243565b604080518251815260208084015190820152918101516001600160a01b0316908201526060015b60405180910390f35b34801561012c57600080fd5b506100d461013b3660046109c8565b61027e565b34801561014c57600080fd5b506101556102a8565b6040519015158152602001610117565b610155610388565b34801561017957600080fd5b506100d46104ee565b34801561018e57600080fd5b506100d46105b5565b3480156101a357600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610117565b3480156101d557600080fd5b506101df60015481565b604051908152602001610117565b3480156101f957600080fd5b506100d46102083660046109c8565b6105c9565b34801561021957600080fd5b506003546101b1906001600160a01b031681565b34801561023957600080fd5b506101df60025481565b6102706040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b61027933610642565b905090565b6102866106b3565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b33600090815260046020908152604080832081516060810183528154815260018201549381018490526002909101546001600160a01b03169181019190915290820361030f57806020015160405163076ca5e760e21b81526004016100cb91815260200190565b60408101516001600160a01b03166103695760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420616e6f6d616c6c792064657465637465640000000000000060448201526064016100cb565b61038081604001518260200151836000015161070d565b600191505090565b600080600061039633610642565b90506001543410156103bd576040516302ee6a2560e21b81523460048201526024016100cb565b604081015191506001600160a01b03821661041d576003546040516001600160a01b03909116906103ed906109a6565b6001600160a01b039091168152602001604051809103906000f080158015610419573d6000803e3d6000fd5b5091505b60208101511561043a5761043a828260200151836000015161070d565b604051806060016040528061044c4290565b8152346020808301919091526001600160a01b0385811660409384015233600090815260048352838120855181559285015160018401559390920151600291820180546001600160a01b03191691909316179091558054916104ad836109fb565b90915550506040513481527feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca279060200160405180910390a160019250505090565b60006104f933610642565b6040908101519051633ce051f560e11b81523360048201529091506001600160a01b038216906379c0a3ea90602401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b5050604051627a79d960e91b81523360048201526001600160a01b038416925063f4f3b2009150602401600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b5050505050565b6105bd6106b3565b6105c76000610820565b565b6105d16106b3565b6001600160a01b0381166106365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100cb565b61063f81610820565b50565b61066f6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b506001600160a01b03908116600090815260046020908152604091829020825160608101845281548152600182015492810192909252600201549092169082015290565b6000546001600160a01b031633146105c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100cb565b6002805490600061071d83610a14565b909155505033600090815260046020526040808220600101829055516001600160a01b0385169084908381818185875af1925050503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b50509050806107c85760405162461bcd60e51b8152602060048201526011602482015270151c985b9cd9995c881c995a9958dd1959607a1b60448201526064016100cb565b60006107d48484610870565b905080156107e6576107e685826108da565b6040518481527f11725367022c3ff288940f4b5473aa61c2da6a24af7363a1128ee2401e8983b29060200160405180910390a15050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000603c4283810361088d5766038d7ea4c68000925050506108d4565b838111156108d15760006108a1828661097b565b905080156108c4576108bd836108b7838961098e565b9061099a565b93506108cf565b66038d7ea4c6800093505b505b50505b92915050565b6003546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f19906044016020604051808303816000875af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610a2b565b6109775760405162461bcd60e51b815260206004820152600060248201526044016100cb565b5050565b60006109878284610a4d565b9392505050565b60006109878284610a60565b60006109878284610a77565b61040380610a9a83390190565b6001600160a01b038116811461063f57600080fd5b6000602082840312156109da57600080fd5b8135610987816109b3565b634e487b7160e01b600052601160045260246000fd5b600060018201610a0d57610a0d6109e5565b5060010190565b600081610a2357610a236109e5565b506000190190565b600060208284031215610a3d57600080fd5b8151801515811461098757600080fd5b818103818111156108d4576108d46109e5565b80820281158282048414176108d4576108d46109e5565b600082610a9457634e487b7160e01b600052601260045260246000fd5b50049056fe608060405260405161040338038061040383398101604081905261002291610055565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610085565b60006020828403121561006757600080fd5b81516001600160a01b038116811461007e57600080fd5b9392505050565b61036f806100946000396000f3fe60806040526004361061002d5760003560e01c806379c0a3ea1461006c578063f4f3b2001461008e57600080fd5b36610067576040513481527ffd51b9a62feedc9cf075eaada5ee2e87aaaa00219195f21375592867215b3c5e9060200160405180910390a1005b600080fd5b34801561007857600080fd5b5061008c6100873660046102ce565b6100ae565b005b34801561009a57600080fd5b5061008c6100a93660046102ce565b61017c565b6000546001600160a01b031633146100e057604051630b104a5b60e01b81523360048201526024015b60405180910390fd5b60405147906000906001600160a01b0384169083908381818185875af1925050503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b50509050806101775760405162461bcd60e51b81526020600482015260116024820152701dda5d1a191c985dd85b0819985a5b1959607a1b60448201526064016100d7565b505050565b6000546001600160a01b031633146101a957604051630b104a5b60e01b81523360048201526024016100d7565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021691906102fe565b905080156102ca5760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102959190610317565b6102ca5760405162461bcd60e51b815260206004820152600660248201526511985a5b195960d21b60448201526064016100d7565b5050565b6000602082840312156102e057600080fd5b81356001600160a01b03811681146102f757600080fd5b9392505050565b60006020828403121561031057600080fd5b5051919050565b60006020828403121561032957600080fd5b815180151581146102f757600080fdfea264697066735822122025bbb4b8a17f3e3e4b12e12b816475640439ac1b5117dddcb15d55509b72d8d664736f6c63430008110033a2646970667358221220b12204cb8d745d52056bf7de98ac6b5e31c146c07f6851915b2333a9f81edf2964736f6c6343000811003360806040523480156200001157600080fd5b5060405162000cfb38038062000cfb833981016040819052620000349162000118565b6040518060400160405280600b81526020016a2932bbb0b9322a37b5b2b760a91b8152506040518060400160405280600381526020016252544b60e81b8152508160039081620000859190620001f9565b506004620000948282620001f9565b50505060008111620000da5760405162461bcd60e51b815260206004820152600b60248201526a5a65726f20737570706c7960a81b604482015260640160405180910390fd5b620000ee81670de0b6b3a7640000620002c5565b60055550600680546001600160a01b0319166001600160a01b0392909216919091179055620002f1565b600080604083850312156200012c57600080fd5b82516001600160a01b03811681146200014457600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017f57607f821691505b602082108103620001a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f457600081815260208120601f850160051c81016020861015620001cf5750805b601f850160051c820191505b81811015620001f057828155600101620001db565b5050505b505050565b81516001600160401b0381111562000215576200021562000154565b6200022d816200022684546200016a565b84620001a6565b602080601f8311600181146200026557600084156200024c5750858301515b600019600386901b1c1916600185901b178555620001f0565b600085815260208120601f198616915b82811015620002965788860151825594840194600190910190840162000275565b5085821015620002b55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417620002eb57634e487b7160e01b600052601160045260246000fd5b92915050565b6109fa80620003016000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e6578063a9059cbb146101f9578063d5abeb011461020c578063dd62ed3e1461021557600080fd5b806370a082311461018a5780638da5cb5b146101b357806395d89b41146101de57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610228565b6040516101049190610844565b60405180910390f35b61012061011b3660046108ae565b6102ba565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046108d8565b6102d4565b60405160128152602001610104565b6101206101723660046108ae565b6102f8565b6101206101853660046108ae565b61031a565b610134610198366004610914565b6001600160a01b031660009081526020819052604090205490565b6006546101c6906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f7610380565b6101206101f43660046108ae565b61038f565b6101206102073660046108ae565b61040a565b61013460055481565b610134610223366004610936565b610418565b60606003805461023790610969565b80601f016020809104026020016040519081016040528092919081815260200182805461026390610969565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050905090565b6000336102c8818585610443565b60019150505b92915050565b6000336102e2858285610567565b6102ed8585856105e1565b506001949350505050565b6000336102c881858561030b8383610418565b61031591906109a3565b610443565b6006546000906001600160a01b0316331461036d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6103778383610785565b50600192915050565b60606004805461023790610969565b6000338161039d8286610418565b9050838110156103fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610364565b6102ed8286868403610443565b6000336102c88185856105e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104a55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610364565b6001600160a01b0382166105065760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610364565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105738484610418565b905060001981146105db57818110156105ce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610364565b6105db8484848403610443565b50505050565b6001600160a01b0383166106455760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610364565b6001600160a01b0382166106a75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610364565b6001600160a01b0383166000908152602081905260409020548181101561071f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610364565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105db565b6001600160a01b0382166107db5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610364565b80600260008282546107ed91906109a3565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561087157858101830151858201604001528201610855565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108a957600080fd5b919050565b600080604083850312156108c157600080fd5b6108ca83610892565b946020939093013593505050565b6000806000606084860312156108ed57600080fd5b6108f684610892565b925061090460208501610892565b9150604084013590509250925092565b60006020828403121561092657600080fd5b61092f82610892565b9392505050565b6000806040838503121561094957600080fd5b61095283610892565b915061096060208401610892565b90509250929050565b600181811c9082168061097d57607f821691505b60208210810361099d57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102ce57634e487b7160e01b600052601160045260246000fdfea264697066735822122029d2bfd06e0d3e61e37a9d024b1a5652803a245005688e17fe0cab1843d3137e64736f6c63430008110033a264697066735822122010380891f497bc355edac9d79e2a5a034eb59e502eb2acae78b500dbec40868164736f6c63430008110033",
    "sourceMap": "244:1736:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:288;;;;;;;;;;;;;:::i;:::-;;690:420;;;;;;;;;;;;;:::i;1116:459::-;;;;;;;;;;;;;:::i;1865:600:0:-;;;;;;;;;;;;;:::i;:::-;;;179:14:27;;172:22;154:41;;142:2;127:18;1865:600:0;;;;;;;;1581:396:26;;;;;;;;;;;;;:::i;1609:26:0:-;;;;;;;;;;-1:-1:-1;1609:26:0;;;;;;;;276:18:26;;;;;;;;;;-1:-1:-1;276:18:26;;;;-1:-1:-1;;;;;276:18:26;;;;;;-1:-1:-1;;;;;393:32:27;;;375:51;;363:2;348:18;276::26;206:226:27;299:24:26;;;;;;;;;;-1:-1:-1;299:24:26;;;;-1:-1:-1;;;;;299:24:26;;;359:288;523:25;;412:8;;484:24;;412:8;;523:25;;;:::i;:::-;812::27;;;800:2;785:18;523:25:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;515:5:26;:33;;-1:-1:-1;;;;;;515:33:26;-1:-1:-1;;;;;515:33:26;;;;;;;;;563:42;;595:9;;563:42;;;:::i;:::-;-1:-1:-1;;;;;1040:32:27;;;1022:51;;1104:2;1089:18;;1082:34;1010:2;995:18;563:42:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:5:26;:50;;-1:-1:-1;;;;;;555:50:26;-1:-1:-1;;;;;555:50:26;;;;;;;;;612:5;;:29;;-1:-1:-1;;;612:29:26;;;;;375:51:27;;;;612:5:26;;;;:14;;348:18:27;;612:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:264;;359:288::o;690:420::-;787:5;;806:8;;787:30;;;-1:-1:-1;;;787:30:26;;;;744:15;;725:16;;-1:-1:-1;;;;;787:5:26;;;;:11;;:30;;;;;;;;;;;;;;806:8;787:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;766:51;;824:27;833:11;846:4;824:8;:27::i;:::-;887:5;;:23;;;-1:-1:-1;;;887:23:26;;;;860:24;;-1:-1:-1;;;;;887:5:26;;:21;;:23;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;860:50;;917:38;926:3;:15;;;943:11;917:8;:38::i;:::-;962:34;971:3;:14;;;987:8;;962;:34::i;:::-;1006:11;;;;-1:-1:-1;;;;;1006:25:26;1003:53;;1033:23;;-1:-1:-1;;;1033:23:26;;2603:2:27;1033:23:26;;;2585:21:27;2642:2;2622:18;;;2615:30;-1:-1:-1;;;2661:18:27;;;2654:42;2713:18;;1033:23:26;;;;;;;;1003:53;1072:5;;1088:11;;;;;1072:28;;-1:-1:-1;;;1072:28:26;;-1:-1:-1;;;;;393:32:27;;;1072:28:26;;;375:51:27;1063:41:26;;1072:5;;;;;:15;;348:18:27;;1072:28:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1102:1;1063:8;:41::i;:::-;718:392;;;690:420::o;1116:459::-;1204:5;;1223:8;;1204:30;;;-1:-1:-1;;;1204:30:26;;;;1168:21;;-1:-1:-1;;;;;1204:5:26;;:11;;1223:8;;1204:30;;;;;;;;;;;;;;1223:8;1204:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1196:57;;;;-1:-1:-1;;;1196:57:26;;3341:2:27;1196:57:26;;;3323:21:27;3380:2;3360:18;;;3353:30;-1:-1:-1;;;3399:18:27;;;3392:44;3453:18;;1196:57:26;3139:338:27;1196:57:26;1260:51;1269:21;1302:8;;1292:7;:18;;;;:::i;:::-;1260:8;:51::i;:::-;1326:5;;;;;;;;;-1:-1:-1;;;;;1326:5:26;-1:-1:-1;;;;;1326:13:26;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1318:34;;;;-1:-1:-1;;;1318:34:26;;3914:2:27;1318:34:26;;;3896:21:27;3953:1;3933:18;;;3926:29;-1:-1:-1;;;3971:18:27;;;3964:36;4017:18;;1318:34:26;3712:329:27;1318:34:26;1386:5;;:23;;;-1:-1:-1;;;1386:23:26;;;;1359:24;;-1:-1:-1;;;;;1386:5:26;;:21;;:23;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:11;;;;1359:50;;-1:-1:-1;;;;;;1424:25:26;1416:46;;;;-1:-1:-1;;;1416:46:26;;4248:2:27;1416:46:26;;;4230:21:27;4287:1;4267:18;;;4260:29;-1:-1:-1;;;4305:18:27;;;4298:38;4353:18;;1416:46:26;4046:331:27;1416:46:26;1477:5;;1493:11;;;;;1477:28;;-1:-1:-1;;;1477:28:26;;-1:-1:-1;;;;;393:32:27;;;1477:28:26;;;375:51:27;1477:5:26;;;:15;;348:18:27;;1477:28:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1509:4;1477:36;1469:66;;;;-1:-1:-1;;;1469:66:26;;4584:2:27;1469:66:26;;;4566:21:27;4623:2;4603:18;;;4596:30;-1:-1:-1;;;4642:18:27;;;4635:47;4699:18;;1469:66:26;4382:341:27;1469:66:26;1542:27;1551:3;:14;;;1567:1;1542:8;:27::i;:::-;1146:429;;1116:459::o;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;1022:51:27;;;-1:-1:-1;;;1089:18:27;;;1082:34;2251:43:0;;;;;;;;;995:18:27;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;1581:396:26:-;1676:5;;1695:8;;1676:30;;;-1:-1:-1;;;1676:30:26;;;;1640:21;;-1:-1:-1;;;;;1676:5:26;;:11;;1695:8;;1676:30;;;;;;;;;;;;;;1695:8;1676:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1668:57;;;;-1:-1:-1;;;1668:57:26;;3341:2:27;1668:57:26;;;3323:21:27;3380:2;3360:18;;;3353:30;-1:-1:-1;;;3399:18:27;;;3392:44;3453:18;;1668:57:26;3139:338:27;1668:57:26;1764:11;1740:21;:35;1732:53;;;;-1:-1:-1;;;1732:53:26;;6145:2:27;1732:53:26;;;6127:21:27;6184:1;6164:18;;;6157:29;-1:-1:-1;;;6202:18:27;;;6195:35;6247:18;;1732:53:26;5943:328:27;1732:53:26;1800:5;;;;;;;;;-1:-1:-1;;;;;1800:5:26;-1:-1:-1;;;;;1800:13:26;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1792:34;;;;-1:-1:-1;;;1792:34:26;;3914:2:27;1792:34:26;;;3896:21:27;3953:1;3933:18;;;3926:29;-1:-1:-1;;;3971:18:27;;;3964:36;4017:18;;1792:34:26;3712:329:27;1792:34:26;1833:5;;;;;;;;;-1:-1:-1;;;;;1833:5:26;-1:-1:-1;;;;;1833:14:26;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:44;1865:21;1888:11;1856:8;:44::i;:::-;1915:5;;:30;;-1:-1:-1;;;1915:30:26;;1939:4;1915:30;;;375:51:27;1948:1:26;;-1:-1:-1;;;;;1915:5:26;;:15;;348:18:27;;1915:30:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;1907:64;;;;-1:-1:-1;;;1907:64:26;;4584:2:27;1907:64:26;;;4566:21:27;4623:2;4603:18;;;4596:30;-1:-1:-1;;;4642:18:27;;;4635:47;4699:18;;1907:64:26;4382:341:27;1907:64:26;1614:363;1581:396::o;816:319:2:-;887:1;882:6;;:1;:6;;;878:250;;910:41;;;;;6478:2:27;6460:21;;;6517:2;6497:18;;;6490:30;6556:34;6551:2;6536:18;;6529:62;-1:-1:-1;;;6622:2:27;6607:18;;6600:32;6664:3;6649:19;;6276:398;910:41:2;;;;;;;;971:52;1002:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1002:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1002:20:2;;;;971:52;;;;;;:::i;:::-;;;;;;;;1043;1074:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1074:20:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1074:20:2;;;;1043:52;;;;;;:::i;:::-;;;;;;;;1110:6;:4;:6::i;5358:269:0:-;5421:1;5416;:6;5412:208;;5444:41;;;;;8375:2:27;8357:21;;;8414:2;8394:18;;;8387:30;8453:34;8448:2;8433:18;;8426:62;-1:-1:-1;;;8519:2:27;8504:18;;8497:32;8561:3;8546:19;;8173:398;5444:41:0;;;;;;;;5505:31;5534:1;5505:31;;;;;;:::i;:::-;;;;;;;;5556;5585:1;5556:31;;;;;;:::i;2474:435::-;3070:42;3058:55;3141:16;2510:367;;2714:67;;;1712:64;2714:67;;;9484:51:27;;;-1:-1:-1;;;9551:18:27;;;9544:34;;;;2774:4:0;9594:18:27;;;9587:34;2548:11:0;;1712:64;2647:43;;9457:18:27;;2714:67:0;;;-1:-1:-1;;2714:67:0;;;;;;;;;;2601:199;;;2714:67;2601:199;;:::i;:::-;;;;-1:-1:-1;;2601:199:0;;;;;;;;;;2565:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2510:367:0;2887:7;:14;;-1:-1:-1;;2887:14:0;;;;;2474:435::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1351:277:27:-;1418:6;1471:2;1459:9;1450:7;1446:23;1442:32;1439:52;;;1487:1;1484;1477:12;1439:52;1519:9;1513:16;1572:5;1565:13;1558:21;1551:5;1548:32;1538:60;;1594:1;1591;1584:12;1538:60;1617:5;1351:277;-1:-1:-1;;;1351:277:27:o;1633:763::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;1830:2;1824:9;1872:2;1864:6;1860:15;1941:6;1929:10;1926:22;1905:18;1893:10;1890:34;1887:62;1884:185;;;1991:10;1986:3;1982:20;1979:1;1972:31;2026:4;2023:1;2016:15;2054:4;2051:1;2044:15;1884:185;2085:2;2078:22;;;2124:16;;2109:32;;2195:2;2180:18;;;2174:25;2157:15;;;2150:50;2228:18;;2222:25;-1:-1:-1;;;;;2276:31:27;;2266:42;;2256:70;;2322:1;2319;2312:12;2256:70;2354:2;2342:15;;2335:30;2346:6;1633:763;-1:-1:-1;;;1633:763:27:o;2950:184::-;3020:6;3073:2;3061:9;3052:7;3048:23;3044:32;3041:52;;;3089:1;3086;3079:12;3041:52;-1:-1:-1;3112:16:27;;2950:184;-1:-1:-1;2950:184:27:o;3482:225::-;3549:9;;;3570:11;;;3567:134;;;3623:10;3618:3;3614:20;3611:1;3604:31;3658:4;3655:1;3648:15;3686:4;3683:1;3676:15;3567:134;3482:225;;;;:::o;5007:250::-;5092:1;5102:113;5116:6;5113:1;5110:13;5102:113;;;5192:11;;;5186:18;5173:11;;;5166:39;5138:2;5131:10;5102:113;;;-1:-1:-1;;5249:1:27;5231:16;;5224:27;5007:250::o;5262:384::-;-1:-1:-1;;;;;;5447:33:27;;5435:46;;5504:13;;5417:3;;5526:74;5504:13;5589:1;5580:11;;5573:4;5561:17;;5526:74;:::i;:::-;5620:16;;;;5638:1;5616:24;;5262:384;-1:-1:-1;;;5262:384:27:o;5651:287::-;5780:3;5818:6;5812:13;5834:66;5893:6;5888:3;5881:4;5873:6;5869:17;5834:66;:::i;:::-;5916:16;;;;;5651:287;-1:-1:-1;;5651:287:27:o;6843:271::-;6885:3;6923:5;6917:12;6950:6;6945:3;6938:19;6966:76;7035:6;7028:4;7023:3;7019:14;7012:4;7005:5;7001:16;6966:76;:::i;:::-;7096:2;7075:15;-1:-1:-1;;7071:29:27;7062:39;;;;7103:4;7058:50;;6843:271;-1:-1:-1;;6843:271:27:o;7119:440::-;7369:2;7358:9;7351:21;7332:4;7395:49;7440:2;7429:9;7425:18;6756:2;6744:15;;-1:-1:-1;;;6784:4:27;6775:14;;6768:36;6829:2;6820:12;;6679:159;7395:49;7492:9;7484:6;7480:22;7475:2;7464:9;7460:18;7453:50;7520:33;7546:6;7538;7520:33;:::i;:::-;7512:41;7119:440;-1:-1:-1;;;;7119:440:27:o;7728:::-;7978:2;7967:9;7960:21;7941:4;8004:49;8049:2;8038:9;8034:18;7641:2;7629:15;;-1:-1:-1;;;7669:4:27;7660:14;;7653:36;7714:2;7705:12;;7564:159;8576:348;8806:2;8795:9;8788:21;8769:4;8826:49;8871:2;8860:9;8856:18;6756:2;6744:15;;-1:-1:-1;;;6784:4:27;6775:14;;6768:36;6829:2;6820:12;;6679:159;8826:49;8818:57;;8911:6;8906:2;8895:9;8891:18;8884:34;8576:348;;;;:::o;8929:::-;9159:2;9148:9;9141:21;9122:4;9179:49;9224:2;9213:9;9209:18;7641:2;7629:15;;-1:-1:-1;;;7669:4:27;7660:14;;7653:36;7714:2;7705:12;;7564:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testStake()": "3a1143da",
    "testUnstake()": "afe571a5",
    "testWithdrawal()": "cc8af67e",
    "token()": "fc0c546a",
    "vault()": "fbfa77cf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Vault.t.sol\":\"VaultTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda\",\"dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x88b585aa59e3e902707a99ca0e59a85adbe623c138b6410e6c8b536de965089a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e199ff9217b07e9f59f72cc4b85a301bb37ce9cda7aea8ed30369e60d747450\",\"dweb:/ipfs/QmSmsTeuzawFLCmyVCKntQYfnXvjRcLLrvtapeVJ73hUUg\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x33e455816737368f5e6379b8d3d24704e9ad75129351b25ef662839d81644262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c94eabfa5bce4698279240a46b1167c063306267b355680921f6474dd8ec649\",\"dweb:/ipfs/QmVEFpsP2ccYUbyKHNRNELve8g7CFRYLLLJTSsQjMn2vfw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xcc3da026001a33a622acab639e9b517fb8695595a927e04e5905ae085890dd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21956628088a2efee2ecc1b4ae1ce262dcc56c1d9f884fae9981d2333ede99b\",\"dweb:/ipfs/QmdschSxVDKX2w3QcqhTRa9XfAyAytDS9kkWY8DYyE6pbR\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x27c6de283cd8e16c3afc47e1219955b4de917faa90d08f2fdfa67acd34a64ab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://948e3ded108e03a5bc4b5cfee639895cff96748f4fa769964326e387d3750495\",\"dweb:/ipfs/QmVPLEJQbKRbRWuBGtACkiWYkgd2cZvCqMyjbbGmawhLwg\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xd0f8d1886007276d0af4a197670b711aac0d583b926a71f321debe4e92180514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ba4a2cc2cab807e72e5a4229d08e234980a46e96c642ecf1dfafa5e0d199c3\",\"dweb:/ipfs/QmRwLCagD4gjkWr3XfL6JBLtV7K8rU3VFfrBnvT7pALDw1\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd\",\"dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6253d3be4a8c975a97fed6d4bbd3ef2bb436eb1b6002a0b42c07b4d99e931ed8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ced003a77268ca44768af0954e177543c6652a5c13c213940dd1dc988e07c10\",\"dweb:/ipfs/QmbPUB2bZZEhZHFqVLn26FMz323DHWc2LjKbndf9Zh84rE\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf4af87a604a5189d491c3e4cead9edfe78e63c94bc006fe475340a4a51dd2917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://981b97a727f38849ff7ffec4bf17964f6fc562134128b39914e85159e7295406\",\"dweb:/ipfs/QmUqLQtsDg5yEVD8szFV2D4RN61YGcBB2fDStxxnCe9ark\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9f5b969304be23b7d48c5ff8184db6d272aed5f9f70ab98db7f1bccd92683146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967a1b5bf30ef0f6dcdbf779c520f6c505e1c99565139d9ca36f15e1b126feaa\",\"dweb:/ipfs/QmUCoVrXJK6roJBFSE51TtqBAWrd6py2pJShGHEisixnEU\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3a9f913b929362c5ae23101a19d72df5f8dc4e357ff895e6d546c9e549117273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ac891596c301064567a367cccf41a89d4803612819c3bd9e830adeda330e4c0\",\"dweb:/ipfs/QmacNFCYH9fnhRoRSYBzApC7byhs5p9LoGCvBDBdzPmjqN\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488\",\"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xdd98bfe1095cbc031cd6ded0d4e8fc386dba441130fba7c9892903b76f2236d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2212565ab7fa7c3d21f5f69b47d2d4af5ef3ccfc490a40f7d37fd069fd27df6\",\"dweb:/ipfs/QmUWCJ83N9PJBWEJSAyRSGdCaHuFjGbDtnthFCctbrdWoy\"]},\"src/Vault.sol\":{\"keccak256\":\"0x3a21c0ab08aeeea9bd6b4e81b797a9d9691bd3333504b5c45e1eaac3887ca42e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://93121fa7e7e3b5c208e9ae98b7862545c13a2dbc4e1138191f164f6809020084\",\"dweb:/ipfs/Qmf2GVYRsGm9Y5Lao2syTphr8woFTJHv7Y1UeyEu263qDG\"]},\"src/account/Account.sol\":{\"keccak256\":\"0x6b6b07b9dfc56b2a00c7f825e3bba0c2537319d0ff8f88156e00a6de08998d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f4623f3e5e9f098599c0b37ec71ed3b6128ec6ffed37aa4f2a9d4ea11e1b16b\",\"dweb:/ipfs/QmWgPFonTJWoAUJa148fXDtyNKrXZuwqLsZb5wwJPgbimt\"]},\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0xbc01b5d0052a8e9820bc6c2129f00fe16cb3f2b5118f1c7b5e1f21cfced5e56b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc81980a116381ecd907523de1d961ead94b4f1dd1a4abadab12861330f7de40\",\"dweb:/ipfs/QmVEpP9iG6af35BVCMndKwYjW4nXfZsx6nrrwRUcAM943z\"]},\"src/interfaces/IVault.sol\":{\"keccak256\":\"0x697445b85dc6fb3f17c18f569b35ba0f12097500962f9137d16a812dc866cb5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e07db3b18dadb8ff1be70828c899a9ca2f860086c53842fdac6564fabbc7459\",\"dweb:/ipfs/QmbH8fSP3peTZ9FxCrnuHzikNVRnFq41X5PFLK6tJMM9rN\"]},\"src/reward/ERC20.sol\":{\"keccak256\":\"0xd3a39537bad9d6e21b0cc2d74a34dc6bd256f3b96bd1e69a59199e2b2acbf30a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e62d006f385083fc1b171a738ef7a31c5d3e032b55b2c3169aa916244a96c383\",\"dweb:/ipfs/Qmf4eZbMuwpohYYTJ1qCTaA9ek8WJVszbvnXCi1qSfL6Ps\"]},\"src/reward/IERC20.sol\":{\"keccak256\":\"0x89c54307ad1370e646c7db27dd16d7b2136e260f1e6db0e2d7770b8a12f35e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67521276e735c784e9611676eb9c5441a69e969f1189fe4dcdba2d6f28824e95\",\"dweb:/ipfs/QmUVsp2gwCRB6Dd1KDJsXWbEjaJyDbshvrRvnKA2seMp9z\"]},\"src/reward/IERC20Metadata.sol\":{\"keccak256\":\"0x2cc02e1238a11d5cf5af946d8c928a6fdc5fd0ce018d3b52791a33f10cf93785\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e56e571b2c4cc26bc9f0c31fa87451d95051911e047260c7abb8d8d0c937af21\",\"dweb:/ipfs/QmVwjYeh4oZEmYqhrQBwapJ3ZBMaLsKFwjrsA3ntDyTJ21\"]},\"src/reward/RewardToken.sol\":{\"keccak256\":\"0x89f6c95e95d435c18c2872a06ac028dbbc26ee70d6f9e5176137e255fb72acf4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5738ba604b6b0e2c38c11c6e432f5cdf4ed3fdb8720627114bd06ce0d5b9220\",\"dweb:/ipfs/QmZnaBUHY7B22VyE27i2Nd99gdjndywgUDHB9ZMHmTAaYN\"]},\"test/Vault.t.sol\":{\"keccak256\":\"0x5348a62f277926ccfd3af9b3d7c8af85f4dfb2c945bef3a97c4e6b60cc8ed79f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c88780c6525046ac86dc0e3cb9f5d5cecc6c9b70853d88994f37ba3c1ed5d5cc\",\"dweb:/ipfs/QmRd9WgxcBcAhaJBZ7896bomRgCLskqh6EtexQXj5GCcbc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnstake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdrawal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract RewardToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract Vault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Vault.t.sol": "VaultTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e",
        "urls": [
          "bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda",
          "dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x88b585aa59e3e902707a99ca0e59a85adbe623c138b6410e6c8b536de965089a",
        "urls": [
          "bzz-raw://5e199ff9217b07e9f59f72cc4b85a301bb37ce9cda7aea8ed30369e60d747450",
          "dweb:/ipfs/QmSmsTeuzawFLCmyVCKntQYfnXvjRcLLrvtapeVJ73hUUg"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x33e455816737368f5e6379b8d3d24704e9ad75129351b25ef662839d81644262",
        "urls": [
          "bzz-raw://6c94eabfa5bce4698279240a46b1167c063306267b355680921f6474dd8ec649",
          "dweb:/ipfs/QmVEFpsP2ccYUbyKHNRNELve8g7CFRYLLLJTSsQjMn2vfw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xcc3da026001a33a622acab639e9b517fb8695595a927e04e5905ae085890dd5e",
        "urls": [
          "bzz-raw://d21956628088a2efee2ecc1b4ae1ce262dcc56c1d9f884fae9981d2333ede99b",
          "dweb:/ipfs/QmdschSxVDKX2w3QcqhTRa9XfAyAytDS9kkWY8DYyE6pbR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x27c6de283cd8e16c3afc47e1219955b4de917faa90d08f2fdfa67acd34a64ab8",
        "urls": [
          "bzz-raw://948e3ded108e03a5bc4b5cfee639895cff96748f4fa769964326e387d3750495",
          "dweb:/ipfs/QmVPLEJQbKRbRWuBGtACkiWYkgd2cZvCqMyjbbGmawhLwg"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701",
        "urls": [
          "bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b",
          "dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xd0f8d1886007276d0af4a197670b711aac0d583b926a71f321debe4e92180514",
        "urls": [
          "bzz-raw://d2ba4a2cc2cab807e72e5a4229d08e234980a46e96c642ecf1dfafa5e0d199c3",
          "dweb:/ipfs/QmRwLCagD4gjkWr3XfL6JBLtV7K8rU3VFfrBnvT7pALDw1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399",
        "urls": [
          "bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8",
          "dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x5a0b30c49be6f9380a2cee0f227b51a984f8b75f6e28e28560eee14d1f1bc681",
        "urls": [
          "bzz-raw://e2f1b6aa8fa11d044a8a1ed92dee3a8c1e82c8d955972fb16dcd9a829d4d5ddd",
          "dweb:/ipfs/QmPhgwgED3nZioET7kuK1xQfQrnuzKjtKyiH6YaCAiFHNd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6253d3be4a8c975a97fed6d4bbd3ef2bb436eb1b6002a0b42c07b4d99e931ed8",
        "urls": [
          "bzz-raw://6ced003a77268ca44768af0954e177543c6652a5c13c213940dd1dc988e07c10",
          "dweb:/ipfs/QmbPUB2bZZEhZHFqVLn26FMz323DHWc2LjKbndf9Zh84rE"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf4af87a604a5189d491c3e4cead9edfe78e63c94bc006fe475340a4a51dd2917",
        "urls": [
          "bzz-raw://981b97a727f38849ff7ffec4bf17964f6fc562134128b39914e85159e7295406",
          "dweb:/ipfs/QmUqLQtsDg5yEVD8szFV2D4RN61YGcBB2fDStxxnCe9ark"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9f5b969304be23b7d48c5ff8184db6d272aed5f9f70ab98db7f1bccd92683146",
        "urls": [
          "bzz-raw://967a1b5bf30ef0f6dcdbf779c520f6c505e1c99565139d9ca36f15e1b126feaa",
          "dweb:/ipfs/QmUCoVrXJK6roJBFSE51TtqBAWrd6py2pJShGHEisixnEU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3a9f913b929362c5ae23101a19d72df5f8dc4e357ff895e6d546c9e549117273",
        "urls": [
          "bzz-raw://5ac891596c301064567a367cccf41a89d4803612819c3bd9e830adeda330e4c0",
          "dweb:/ipfs/QmacNFCYH9fnhRoRSYBzApC7byhs5p9LoGCvBDBdzPmjqN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307",
        "urls": [
          "bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20",
          "dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
        "urls": [
          "bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
          "dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xdd98bfe1095cbc031cd6ded0d4e8fc386dba441130fba7c9892903b76f2236d9",
        "urls": [
          "bzz-raw://c2212565ab7fa7c3d21f5f69b47d2d4af5ef3ccfc490a40f7d37fd069fd27df6",
          "dweb:/ipfs/QmUWCJ83N9PJBWEJSAyRSGdCaHuFjGbDtnthFCctbrdWoy"
        ],
        "license": "MIT"
      },
      "src/Vault.sol": {
        "keccak256": "0x3a21c0ab08aeeea9bd6b4e81b797a9d9691bd3333504b5c45e1eaac3887ca42e",
        "urls": [
          "bzz-raw://93121fa7e7e3b5c208e9ae98b7862545c13a2dbc4e1138191f164f6809020084",
          "dweb:/ipfs/Qmf2GVYRsGm9Y5Lao2syTphr8woFTJHv7Y1UeyEu263qDG"
        ],
        "license": "UNLICENSED"
      },
      "src/account/Account.sol": {
        "keccak256": "0x6b6b07b9dfc56b2a00c7f825e3bba0c2537319d0ff8f88156e00a6de08998d52",
        "urls": [
          "bzz-raw://1f4623f3e5e9f098599c0b37ec71ed3b6128ec6ffed37aa4f2a9d4ea11e1b16b",
          "dweb:/ipfs/QmWgPFonTJWoAUJa148fXDtyNKrXZuwqLsZb5wwJPgbimt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAccount.sol": {
        "keccak256": "0xbc01b5d0052a8e9820bc6c2129f00fe16cb3f2b5118f1c7b5e1f21cfced5e56b",
        "urls": [
          "bzz-raw://bc81980a116381ecd907523de1d961ead94b4f1dd1a4abadab12861330f7de40",
          "dweb:/ipfs/QmVEpP9iG6af35BVCMndKwYjW4nXfZsx6nrrwRUcAM943z"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVault.sol": {
        "keccak256": "0x697445b85dc6fb3f17c18f569b35ba0f12097500962f9137d16a812dc866cb5d",
        "urls": [
          "bzz-raw://0e07db3b18dadb8ff1be70828c899a9ca2f860086c53842fdac6564fabbc7459",
          "dweb:/ipfs/QmbH8fSP3peTZ9FxCrnuHzikNVRnFq41X5PFLK6tJMM9rN"
        ],
        "license": "MIT"
      },
      "src/reward/ERC20.sol": {
        "keccak256": "0xd3a39537bad9d6e21b0cc2d74a34dc6bd256f3b96bd1e69a59199e2b2acbf30a",
        "urls": [
          "bzz-raw://e62d006f385083fc1b171a738ef7a31c5d3e032b55b2c3169aa916244a96c383",
          "dweb:/ipfs/Qmf4eZbMuwpohYYTJ1qCTaA9ek8WJVszbvnXCi1qSfL6Ps"
        ],
        "license": "MIT"
      },
      "src/reward/IERC20.sol": {
        "keccak256": "0x89c54307ad1370e646c7db27dd16d7b2136e260f1e6db0e2d7770b8a12f35e07",
        "urls": [
          "bzz-raw://67521276e735c784e9611676eb9c5441a69e969f1189fe4dcdba2d6f28824e95",
          "dweb:/ipfs/QmUVsp2gwCRB6Dd1KDJsXWbEjaJyDbshvrRvnKA2seMp9z"
        ],
        "license": "MIT"
      },
      "src/reward/IERC20Metadata.sol": {
        "keccak256": "0x2cc02e1238a11d5cf5af946d8c928a6fdc5fd0ce018d3b52791a33f10cf93785",
        "urls": [
          "bzz-raw://e56e571b2c4cc26bc9f0c31fa87451d95051911e047260c7abb8d8d0c937af21",
          "dweb:/ipfs/QmVwjYeh4oZEmYqhrQBwapJ3ZBMaLsKFwjrsA3ntDyTJ21"
        ],
        "license": "MIT"
      },
      "src/reward/RewardToken.sol": {
        "keccak256": "0x89f6c95e95d435c18c2872a06ac028dbbc26ee70d6f9e5176137e255fb72acf4",
        "urls": [
          "bzz-raw://d5738ba604b6b0e2c38c11c6e432f5cdf4ed3fdb8720627114bd06ce0d5b9220",
          "dweb:/ipfs/QmZnaBUHY7B22VyE27i2Nd99gdjndywgUDHB9ZMHmTAaYN"
        ],
        "license": "UNLICENSED"
      },
      "test/Vault.t.sol": {
        "keccak256": "0x5348a62f277926ccfd3af9b3d7c8af85f4dfb2c945bef3a97c4e6b60cc8ed79f",
        "urls": [
          "bzz-raw://c88780c6525046ac86dc0e3cb9f5d5cecc6c9b70853d88994f37ba3c1ed5d5cc",
          "dweb:/ipfs/QmRd9WgxcBcAhaJBZ7896bomRgCLskqh6EtexQXj5GCcbc"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Vault.t.sol",
    "id": 28549,
    "exportedSymbols": {
      "Account": [
        27477
      ],
      "Context": [
        26601
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        28094
      ],
      "IAccount": [
        27490
      ],
      "IERC20": [
        28181
      ],
      "IERC20Metadata": [
        28206
      ],
      "IVault": [
        27510
      ],
      "Ownable": [
        26579
      ],
      "RewardToken": [
        28274
      ],
      "SafeMath": [
        26913
      ],
      "StdAssertions": [
        3092
      ],
      "StdChains": [
        3756
      ],
      "StdCheats": [
        5717
      ],
      "StdStorage": [
        6624
      ],
      "StdUtils": [
        8811
      ],
      "Test": [
        8853
      ],
      "TestBase": [
        1846
      ],
      "Vault": [
        27351
      ],
      "VaultTest": [
        28548
      ],
      "Vm": [
        10143
      ],
      "console": [
        18207
      ],
      "console2": [
        26303
      ],
      "stdError": [
        5783
      ],
      "stdJson": [
        6450
      ],
      "stdMath": [
        6592
      ],
      "stdStorage": [
        8057
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:1940:26",
    "nodes": [
      {
        "id": 28276,
        "nodeType": "PragmaDirective",
        "src": "40:23:26",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 28277,
        "nodeType": "ImportDirective",
        "src": "67:28:26",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28549,
        "sourceUnit": 8854,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28278,
        "nodeType": "ImportDirective",
        "src": "97:26:26",
        "nodes": [],
        "absolutePath": "src/Vault.sol",
        "file": "../src/Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28549,
        "sourceUnit": 27352,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28279,
        "nodeType": "ImportDirective",
        "src": "125:39:26",
        "nodes": [],
        "absolutePath": "src/reward/RewardToken.sol",
        "file": "../src/reward/RewardToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28549,
        "sourceUnit": 28275,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28280,
        "nodeType": "ImportDirective",
        "src": "166:38:26",
        "nodes": [],
        "absolutePath": "src/interfaces/IVault.sol",
        "file": "../src/interfaces/IVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28549,
        "sourceUnit": 27511,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28281,
        "nodeType": "ImportDirective",
        "src": "206:34:26",
        "nodes": [],
        "absolutePath": "src/reward/IERC20.sol",
        "file": "../src/reward/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28549,
        "sourceUnit": 28182,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28548,
        "nodeType": "ContractDefinition",
        "src": "244:1736:26",
        "nodes": [
          {
            "id": 28286,
            "nodeType": "VariableDeclaration",
            "src": "276:18:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "fbfa77cf",
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "289:5:26",
            "scope": 28548,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vault_$27351",
              "typeString": "contract Vault"
            },
            "typeName": {
              "id": 28285,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28284,
                "name": "Vault",
                "nameLocations": [
                  "276:5:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27351,
                "src": "276:5:26"
              },
              "referencedDeclaration": 27351,
              "src": "276:5:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vault_$27351",
                "typeString": "contract Vault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28289,
            "nodeType": "VariableDeclaration",
            "src": "299:24:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "318:5:26",
            "scope": 28548,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RewardToken_$28274",
              "typeString": "contract RewardToken"
            },
            "typeName": {
              "id": 28288,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28287,
                "name": "RewardToken",
                "nameLocations": [
                  "299:11:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28274,
                "src": "299:11:26"
              },
              "referencedDeclaration": 28274,
              "src": "299:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardToken_$28274",
                "typeString": "contract RewardToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28292,
            "nodeType": "VariableDeclaration",
            "src": "328:24:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakeAmt",
            "nameLocation": "333:8:26",
            "scope": 28548,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28290,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "328:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 28291,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "344:8:26",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 28337,
            "nodeType": "FunctionDefinition",
            "src": "359:288:26",
            "nodes": [],
            "body": {
              "id": 28336,
              "nodeType": "Block",
              "src": "383:264:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28296,
                      "mutability": "mutable",
                      "name": "minimumStaking",
                      "nameLocation": "395:14:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28336,
                      "src": "390:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28295,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "390:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28298,
                  "initialValue": {
                    "hexValue": "31653139",
                    "id": 28297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "412:8:26",
                    "subdenomination": "wei",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "1e19"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "390:30:26"
                },
                {
                  "assignments": [
                    28300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28300,
                      "mutability": "mutable",
                      "name": "maxSupply",
                      "nameLocation": "472:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28336,
                      "src": "467:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28299,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28307,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    },
                    "id": 28306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f3030305f303030",
                      "id": 28301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "484:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "value": "1_000_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 28304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 28302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "501:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 28303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "505:2:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "501:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "id": 28305,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "500:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "484:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:41:26"
                },
                {
                  "expression": {
                    "id": 28314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28308,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28286,
                      "src": "515:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$27351",
                        "typeString": "contract Vault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28312,
                          "name": "minimumStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28296,
                          "src": "533:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 28311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "523:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_Vault_$27351_$",
                          "typeString": "function (uint256) returns (contract Vault)"
                        },
                        "typeName": {
                          "id": 28310,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 28309,
                            "name": "Vault",
                            "nameLocations": [
                              "527:5:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27351,
                            "src": "527:5:26"
                          },
                          "referencedDeclaration": 27351,
                          "src": "527:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$27351",
                            "typeString": "contract Vault"
                          }
                        }
                      },
                      "id": 28313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "523:25:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$27351",
                        "typeString": "contract Vault"
                      }
                    },
                    "src": "515:33:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$27351",
                      "typeString": "contract Vault"
                    }
                  },
                  "id": 28315,
                  "nodeType": "ExpressionStatement",
                  "src": "515:33:26"
                },
                {
                  "expression": {
                    "id": 28326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28316,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28289,
                      "src": "555:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$28274",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 28322,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28286,
                              "src": "587:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$27351",
                                "typeString": "contract Vault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Vault_$27351",
                                "typeString": "contract Vault"
                              }
                            ],
                            "id": 28321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "579:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28320,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "579:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "579:14:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 28324,
                          "name": "maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28300,
                          "src": "595:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 28319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "563:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_RewardToken_$28274_$",
                          "typeString": "function (address,uint256) returns (contract RewardToken)"
                        },
                        "typeName": {
                          "id": 28318,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 28317,
                            "name": "RewardToken",
                            "nameLocations": [
                              "567:11:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28274,
                            "src": "567:11:26"
                          },
                          "referencedDeclaration": 28274,
                          "src": "567:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RewardToken_$28274",
                            "typeString": "contract RewardToken"
                          }
                        }
                      },
                      "id": 28325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "563:42:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$28274",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "src": "555:50:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RewardToken_$28274",
                      "typeString": "contract RewardToken"
                    }
                  },
                  "id": 28327,
                  "nodeType": "ExpressionStatement",
                  "src": "555:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28332,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28289,
                            "src": "634:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardToken_$28274",
                              "typeString": "contract RewardToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RewardToken_$28274",
                              "typeString": "contract RewardToken"
                            }
                          ],
                          "id": 28331,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28181,
                          "src": "627:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$28181_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 28333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "627:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$28181",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$28181",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 28328,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28286,
                        "src": "612:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27351",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 28330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "618:8:26",
                      "memberName": "setToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27006,
                      "src": "612:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$28181_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 28334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:29:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28335,
                  "nodeType": "ExpressionStatement",
                  "src": "612:29:26"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "368:5:26",
            "parameters": {
              "id": 28293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:26"
            },
            "returnParameters": {
              "id": 28294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:26"
            },
            "scope": 28548,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28341,
            "nodeType": "FunctionDefinition",
            "src": "655:29:26",
            "nodes": [],
            "body": {
              "id": 28340,
              "nodeType": "Block",
              "src": "682:2:26",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:2:26"
            },
            "returnParameters": {
              "id": 28339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:26"
            },
            "scope": 28548,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28405,
            "nodeType": "FunctionDefinition",
            "src": "690:420:26",
            "nodes": [],
            "body": {
              "id": 28404,
              "nodeType": "Block",
              "src": "718:392:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28345,
                      "mutability": "mutable",
                      "name": "depositTime",
                      "nameLocation": "730:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28404,
                      "src": "725:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28344,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "725:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28348,
                  "initialValue": {
                    "expression": {
                      "id": 28346,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "744:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 28347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "750:9:26",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "744:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "725:34:26"
                },
                {
                  "assignments": [
                    28350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28350,
                      "mutability": "mutable",
                      "name": "doneStaking",
                      "nameLocation": "772:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28404,
                      "src": "767:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 28349,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "767:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28356,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 28351,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28286,
                          "src": "787:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$27351",
                            "typeString": "contract Vault"
                          }
                        },
                        "id": 28352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "793:5:26",
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27096,
                        "src": "787:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$",
                          "typeString": "function () payable external returns (bool)"
                        }
                      },
                      "id": 28354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 28353,
                          "name": "stakeAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28292,
                          "src": "806:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "787:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$value",
                        "typeString": "function () payable external returns (bool)"
                      }
                    },
                    "id": 28355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "766:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28358,
                        "name": "doneStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28350,
                        "src": "833:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 28359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "846:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28357,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1977,
                      "src": "824:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 28360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28361,
                  "nodeType": "ExpressionStatement",
                  "src": "824:27:26"
                },
                {
                  "assignments": [
                    28366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28366,
                      "mutability": "mutable",
                      "name": "stk",
                      "nameLocation": "881:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28404,
                      "src": "860:24:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                        "typeString": "struct IVault.Staker"
                      },
                      "typeName": {
                        "id": 28365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 28364,
                          "name": "IVault.Staker",
                          "nameLocations": [
                            "860:6:26",
                            "867:6:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27499,
                          "src": "860:13:26"
                        },
                        "referencedDeclaration": 27499,
                        "src": "860:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$27499_storage_ptr",
                          "typeString": "struct IVault.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28370,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28367,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28286,
                        "src": "887:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27351",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 28368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "893:15:26",
                      "memberName": "getStakeProfile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27321,
                      "src": "887:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Staker_$27499_memory_ptr_$",
                        "typeString": "function () view external returns (struct IVault.Staker memory)"
                      }
                    },
                    "id": 28369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:23:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                      "typeString": "struct IVault.Staker memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "860:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28372,
                          "name": "stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28366,
                          "src": "926:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                            "typeString": "struct IVault.Staker memory"
                          }
                        },
                        "id": 28373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "930:11:26",
                        "memberName": "depositTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27494,
                        "src": "926:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28374,
                        "name": "depositTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28345,
                        "src": "943:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28371,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "917:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28376,
                  "nodeType": "ExpressionStatement",
                  "src": "917:38:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28378,
                          "name": "stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28366,
                          "src": "971:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                            "typeString": "struct IVault.Staker memory"
                          }
                        },
                        "id": 28379,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "975:10:26",
                        "memberName": "celoAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27496,
                        "src": "971:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28380,
                        "name": "stakeAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28292,
                        "src": "987:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28377,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "962:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "962:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28382,
                  "nodeType": "ExpressionStatement",
                  "src": "962:34:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28383,
                        "name": "stk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28366,
                        "src": "1006:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                          "typeString": "struct IVault.Staker memory"
                        }
                      },
                      "id": 28384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1010:7:26",
                      "memberName": "account",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27498,
                      "src": "1006:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 28387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1029:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 28386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1021:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 28385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1021:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28394,
                  "nodeType": "IfStatement",
                  "src": "1003:53:26",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5a65726f2061646472657373",
                          "id": 28391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1041:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
                            "typeString": "literal_string \"Zero address\""
                          },
                          "value": "Zero address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
                            "typeString": "literal_string \"Zero address\""
                          }
                        ],
                        "id": 28390,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "1033:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 28392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:23:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 28393,
                    "nodeType": "ExpressionStatement",
                    "src": "1033:23:26"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 28398,
                              "name": "stk",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28366,
                              "src": "1088:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                                "typeString": "struct IVault.Staker memory"
                              }
                            },
                            "id": 28399,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1092:7:26",
                            "memberName": "account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27498,
                            "src": "1088:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 28396,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28289,
                            "src": "1072:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardToken_$28274",
                              "typeString": "contract RewardToken"
                            }
                          },
                          "id": 28397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1078:9:26",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27606,
                          "src": "1072:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 28400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1072:28:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28395,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1063:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:41:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28403,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:41:26"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "699:9:26",
            "parameters": {
              "id": 28342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:2:26"
            },
            "returnParameters": {
              "id": 28343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:26"
            },
            "scope": 28548,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28481,
            "nodeType": "FunctionDefinition",
            "src": "1116:459:26",
            "nodes": [],
            "body": {
              "id": 28480,
              "nodeType": "Block",
              "src": "1146:429:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28409,
                      "mutability": "mutable",
                      "name": "initbal",
                      "nameLocation": "1158:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28480,
                      "src": "1153:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28408,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1153:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28415,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 28412,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1176:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultTest_$28548",
                            "typeString": "contract VaultTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VaultTest_$28548",
                            "typeString": "contract VaultTest"
                          }
                        ],
                        "id": 28411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1168:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 28410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1168:13:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 28414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1182:7:26",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1168:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1153:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 28417,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28286,
                              "src": "1204:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$27351",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 28418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1210:5:26",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27096,
                            "src": "1204:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$",
                              "typeString": "function () payable external returns (bool)"
                            }
                          },
                          "id": 28420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 28419,
                              "name": "stakeAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28292,
                              "src": "1223:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "1204:28:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$value",
                            "typeString": "function () payable external returns (bool)"
                          }
                        },
                        "id": 28421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1204:30:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67206661696c6564",
                        "id": 28422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1236:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f86d65395325b1bdbda41aa34496b27a88de23df9a4f0b4dfd6fcc8a7de809f",
                          "typeString": "literal_string \"Staking failed\""
                        },
                        "value": "Staking failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f86d65395325b1bdbda41aa34496b27a88de23df9a4f0b4dfd6fcc8a7de809f",
                          "typeString": "literal_string \"Staking failed\""
                        }
                      ],
                      "id": 28416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1196:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28424,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:57:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28428,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1277:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultTest_$28548",
                                "typeString": "contract VaultTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultTest_$28548",
                                "typeString": "contract VaultTest"
                              }
                            ],
                            "id": 28427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1269:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1269:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1269:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 28430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1283:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1269:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28431,
                          "name": "initbal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28409,
                          "src": "1292:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 28432,
                          "name": "stakeAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28292,
                          "src": "1302:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1292:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28425,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1260:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:51:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28435,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 28437,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28286,
                            "src": "1326:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$27351",
                              "typeString": "contract Vault"
                            }
                          },
                          "id": 28438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1332:7:26",
                          "memberName": "unstake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27199,
                          "src": "1326:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () external returns (bool)"
                          }
                        },
                        "id": 28439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1326:15:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c6564",
                        "id": 28440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1343:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
                          "typeString": "literal_string \"Failed\""
                        },
                        "value": "Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
                          "typeString": "literal_string \"Failed\""
                        }
                      ],
                      "id": 28436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1318:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28442,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:34:26"
                },
                {
                  "assignments": [
                    28447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28447,
                      "mutability": "mutable",
                      "name": "stk",
                      "nameLocation": "1380:3:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28480,
                      "src": "1359:24:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                        "typeString": "struct IVault.Staker"
                      },
                      "typeName": {
                        "id": 28446,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 28445,
                          "name": "IVault.Staker",
                          "nameLocations": [
                            "1359:6:26",
                            "1366:6:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27499,
                          "src": "1359:13:26"
                        },
                        "referencedDeclaration": 27499,
                        "src": "1359:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$27499_storage_ptr",
                          "typeString": "struct IVault.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28451,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28448,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28286,
                        "src": "1386:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27351",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 28449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1392:15:26",
                      "memberName": "getStakeProfile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27321,
                      "src": "1386:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Staker_$27499_memory_ptr_$",
                        "typeString": "function () view external returns (struct IVault.Staker memory)"
                      }
                    },
                    "id": 28450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:23:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                      "typeString": "struct IVault.Staker memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1359:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28453,
                            "name": "stk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28447,
                            "src": "1424:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                              "typeString": "struct IVault.Staker memory"
                            }
                          },
                          "id": 28454,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1428:7:26",
                          "memberName": "account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27498,
                          "src": "1424:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 28457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 28456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1439:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1439:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1439:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1424:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20616c63",
                        "id": 28460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fba9d7552bb2e05d0c3eb606ca256102a00fae1db307d71918a443ecab2ca121",
                          "typeString": "literal_string \"Zero alc\""
                        },
                        "value": "Zero alc"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fba9d7552bb2e05d0c3eb606ca256102a00fae1db307d71918a443ecab2ca121",
                          "typeString": "literal_string \"Zero alc\""
                        }
                      ],
                      "id": 28452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1416:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:46:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28462,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:46:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 28466,
                                "name": "stk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28447,
                                "src": "1493:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                                  "typeString": "struct IVault.Staker memory"
                                }
                              },
                              "id": 28467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1497:7:26",
                              "memberName": "account",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27498,
                              "src": "1493:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 28464,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28289,
                              "src": "1477:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardToken_$28274",
                                "typeString": "contract RewardToken"
                              }
                            },
                            "id": 28465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1483:9:26",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27606,
                            "src": "1477:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 28468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:28:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31653135",
                          "id": 28469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1509:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "1e15"
                        },
                        "src": "1477:36:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20746f6b656e20726577617264",
                        "id": 28471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1515:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1e466cae587fd329270e23381cdb0b37e7b28b12d72e33206c6f0c59a5a6c06",
                          "typeString": "literal_string \"Zero token reward\""
                        },
                        "value": "Zero token reward"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1e466cae587fd329270e23381cdb0b37e7b28b12d72e33206c6f0c59a5a6c06",
                          "typeString": "literal_string \"Zero token reward\""
                        }
                      ],
                      "id": 28463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1469:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1469:66:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28473,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:66:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28475,
                          "name": "stk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28447,
                          "src": "1551:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$27499_memory_ptr",
                            "typeString": "struct IVault.Staker memory"
                          }
                        },
                        "id": 28476,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1555:10:26",
                        "memberName": "celoAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27496,
                        "src": "1551:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 28474,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1542:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28479,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:27:26"
                }
              ]
            },
            "functionSelector": "afe571a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnstake",
            "nameLocation": "1125:11:26",
            "parameters": {
              "id": 28406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:2:26"
            },
            "returnParameters": {
              "id": 28407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:26"
            },
            "scope": 28548,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28547,
            "nodeType": "FunctionDefinition",
            "src": "1581:396:26",
            "nodes": [],
            "body": {
              "id": 28546,
              "nodeType": "Block",
              "src": "1614:363:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28485,
                      "mutability": "mutable",
                      "name": "initBalance",
                      "nameLocation": "1626:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 28546,
                      "src": "1621:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28484,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28491,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 28488,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1648:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultTest_$28548",
                            "typeString": "contract VaultTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VaultTest_$28548",
                            "typeString": "contract VaultTest"
                          }
                        ],
                        "id": 28487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1640:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 28486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1640:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1640:13:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 28490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1654:7:26",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1640:21:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1621:40:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 28493,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28286,
                              "src": "1676:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$27351",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 28494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1682:5:26",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27096,
                            "src": "1676:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$",
                              "typeString": "function () payable external returns (bool)"
                            }
                          },
                          "id": 28496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 28495,
                              "name": "stakeAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28292,
                              "src": "1695:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "1676:28:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$_t_bool_$value",
                            "typeString": "function () payable external returns (bool)"
                          }
                        },
                        "id": 28497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1676:30:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67206661696c6564",
                        "id": 28498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f86d65395325b1bdbda41aa34496b27a88de23df9a4f0b4dfd6fcc8a7de809f",
                          "typeString": "literal_string \"Staking failed\""
                        },
                        "value": "Staking failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f86d65395325b1bdbda41aa34496b27a88de23df9a4f0b4dfd6fcc8a7de809f",
                          "typeString": "literal_string \"Staking failed\""
                        }
                      ],
                      "id": 28492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1668:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28500,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:57:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 28504,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1748:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultTest_$28548",
                                  "typeString": "contract VaultTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VaultTest_$28548",
                                  "typeString": "contract VaultTest"
                                }
                              ],
                              "id": 28503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1740:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 28502,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1740:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 28505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1740:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 28506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1754:7:26",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1740:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 28507,
                          "name": "initBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28485,
                          "src": "1764:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1740:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72",
                        "id": 28509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1777:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 28501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1732:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1732:53:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28511,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:53:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 28513,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28286,
                            "src": "1800:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$27351",
                              "typeString": "contract Vault"
                            }
                          },
                          "id": 28514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1806:7:26",
                          "memberName": "unstake",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27199,
                          "src": "1800:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () external returns (bool)"
                          }
                        },
                        "id": 28515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1800:15:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c6564",
                        "id": 28516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1817:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
                          "typeString": "literal_string \"Failed\""
                        },
                        "value": "Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
                          "typeString": "literal_string \"Failed\""
                        }
                      ],
                      "id": 28512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1792:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28518,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:34:26"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28519,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28286,
                        "src": "1833:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27351",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 28521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1839:8:26",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27350,
                      "src": "1833:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 28522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28523,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:16:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28527,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1873:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultTest_$28548",
                                "typeString": "contract VaultTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultTest_$28548",
                                "typeString": "contract VaultTest"
                              }
                            ],
                            "id": 28526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1865:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 28525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1865:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1865:13:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 28529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1879:7:26",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1865:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28530,
                        "name": "initBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28485,
                        "src": "1888:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28524,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1856:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 28531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28532,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:44:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28538,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1939:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultTest_$28548",
                                    "typeString": "contract VaultTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultTest_$28548",
                                    "typeString": "contract VaultTest"
                                  }
                                ],
                                "id": 28537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1931:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 28536,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1931:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 28539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1931:13:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 28534,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28289,
                              "src": "1915:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardToken_$28274",
                                "typeString": "contract RewardToken"
                              }
                            },
                            "id": 28535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1921:9:26",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27606,
                            "src": "1915:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 28540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1915:30:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1948:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1915:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f20746f6b656e20726577617264",
                        "id": 28543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1e466cae587fd329270e23381cdb0b37e7b28b12d72e33206c6f0c59a5a6c06",
                          "typeString": "literal_string \"Zero token reward\""
                        },
                        "value": "Zero token reward"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1e466cae587fd329270e23381cdb0b37e7b28b12d72e33206c6f0c59a5a6c06",
                          "typeString": "literal_string \"Zero token reward\""
                        }
                      ],
                      "id": 28533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1907:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:64:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28545,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:64:26"
                }
              ]
            },
            "functionSelector": "cc8af67e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawal",
            "nameLocation": "1590:14:26",
            "parameters": {
              "id": 28482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:2:26"
            },
            "returnParameters": {
              "id": 28483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1614:0:26"
            },
            "scope": 28548,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28282,
              "name": "Test",
              "nameLocations": [
                "266:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8853,
              "src": "266:4:26"
            },
            "id": 28283,
            "nodeType": "InheritanceSpecifier",
            "src": "266:4:26"
          }
        ],
        "canonicalName": "VaultTest",
        "contractDependencies": [
          27351,
          28274
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28548,
          8853,
          1846,
          1843,
          8811,
          5717,
          5328,
          3756,
          3092,
          1786
        ],
        "name": "VaultTest",
        "nameLocation": "253:9:26",
        "scope": 28549,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}